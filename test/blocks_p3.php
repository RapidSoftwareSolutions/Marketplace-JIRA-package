<?php
$blocksMU = [];

$blocksMU[] = ['getScreenFieldsToAdd', 'GET', '/rest/api/2/screens/{screenId}/availableFields'];
$blocksMU[] = ['getAllScreenTabs', 'GET', '/rest/api/2/screens/{screenId}/tabs'];
$blocksMU[] = ['addScreenTab', 'POST', '/rest/api/2/screens/{screenId}/tabs'];
$blocksMU[] = ['renameScreenTab', 'PUT', '/rest/api/2/screens/{screenId}/tabs/{tabId}'];
$blocksMU[] = ['deleteScreenTab', 'DELETE', '/rest/api/2/screens/{screenId}/tabs/{tabId}'];
$blocksMU[] = ['getAllScreenFields', 'GET', '/rest/api/2/screens/{screenId}/tabs/{tabId}/fields'];
$blocksMU[] = ['addScreenField', 'POST', '/rest/api/2/screens/{screenId}/tabs/{tabId}/fields'];
$blocksMU[] = ['removeScreenField', 'DELETE', '/rest/api/2/screens/{screenId}/tabs/{tabId}/fields/{id}'];
$blocksMU[] = ['moveScreenField', 'POST', '/rest/api/2/screens/{screenId}/tabs/{tabId}/fields/{id}/move'];
$blocksMU[] = ['moveScreenTab', 'POST', '/rest/api/2/screens/{screenId}/tabs/{tabId}/move/{pos}'];
$blocksMU[] = ['addFieldToDefaultScreen', 'POST', '/rest/api/2/screens/addToDefault/{fieldId}'];
$blocksMU[] = ['search', 'POST', '/rest/api/2/search'];
$blocksMU[] = ['getIssuesecuritylevel', 'GET', '/rest/api/2/securitylevel/{id}'];
$blocksMU[] = ['getServerInfo', 'GET', '/rest/api/2/serverInfo'];
$blocksMU[] = ['setBaseURL', 'PUT', '/rest/api/2/settings/baseUrl'];
$blocksMU[] = ['getIssueNavigatorDefaultColumns', 'GET', '/rest/api/2/settings/columns'];
$blocksMU[] = ['setIssueNavigatorDefaultColumns', 'PUT', '/rest/api/2/settings/columns'];
$blocksMU[] = ['getStatuses', 'GET', '/rest/api/2/status'];
$blocksMU[] = ['getSingleStatus', 'GET', '/rest/api/2/status/{idOrName}'];
$blocksMU[] = ['getStatusCategories', 'GET', '/rest/api/2/statuscategory'];
$blocksMU[] = ['getStatusCategory', 'GET', '/rest/api/2/statuscategory/{idOrKey}'];
$blocksMU[] = ['createAvatar', 'POST', '/rest/api/2/universal_avatar/type/{type}/owner/{entityId}'];
$blocksMU[] = ['getAvatars', 'GET', '/rest/api/2/universal_avatar/type/{type}/owner/{owningObjectId}'];
$blocksMU[] = ['deleteAvatar', 'DELETE', '/rest/api/2/universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id}'];
$blocksMU[] = ['getUser', 'GET', '/rest/api/2/user'];
$blocksMU[] = ['findBulkAssignableUsers', 'GET', '/rest/api/2/user/assignable/multiProjectSearch'];
$blocksMU[] = ['findAssignableUsers', 'GET', '/rest/api/2/user/assignable/search'];
$blocksMU[] = ['getDefaultColumns', 'GET', '/rest/api/2/user/columns'];
$blocksMU[] = ['setColumns', 'PUT', '/rest/api/2/user/columns'];
$blocksMU[] = ['resetDefaultColumns', 'DELETE', '/rest/api/2/user/columns'];
$blocksMU[] = ['findUsersWithAllPermissions', 'GET', '/rest/api/2/user/permission/search'];
$blocksMU[] = ['findUsersByProperty', 'GET', '/rest/api/2/user/search'];
$blocksMU[] = ['findUsersByUsername', 'GET', '/rest/api/2/user/search'];
$blocksMU[] = ['findUsersWithBrowsePermission', 'GET', '/rest/api/2/user/viewissue/search'];
$blocksMU[] = ['getUserPropertiesKeysByUserKey', 'GET', '/rest/api/2/user/properties'];
$blocksMU[] = ['getUserPropertiesKeysByUsername', 'GET', '/rest/api/2/user/properties'];
$blocksMU[] = ['deleteUserPropertyByUserKey', 'DELETE', '/rest/api/2/user/properties/{propertyKey}'];
$blocksMU[] = ['deleteUserPropertyByUsername', 'DELETE', '/rest/api/2/user/properties/{propertyKey}'];
$blocksMU[] = ['setUserPropertyByUserKey', 'PUT', '/rest/api/2/user/properties/{propertyKey}'];
$blocksMU[] = ['setUserPropertyByUsername', 'PUT', '/rest/api/2/user/properties/{propertyKey}'];
$blocksMU[] = ['getUserPropertyByUserKey', 'GET', '/rest/api/2/user/properties/{propertyKey}'];
$blocksMU[] = ['getUserPropertyByUsername', 'GET', '/rest/api/2/user/properties/{propertyKey}'];
$blocksMU[] = ['createVersion', 'POST', '/rest/api/2/version'];
$blocksMU[] = ['moveVersion', 'POST', '/rest/api/2/version/{id}/move'];
$blocksMU[] = ['getVersion', 'GET', '/rest/api/2/version/{id}'];
$blocksMU[] = ['updateVersion', 'PUT', '/rest/api/2/version/{id}'];
$blocksMU[] = ['deleteVersion', 'DELETE', '/rest/api/2/version/{id}'];
$blocksMU[] = ['mergeVersion', 'PUT', '/rest/api/2/version/{id}/mergeto/{moveIssuesTo}'];
$blocksMU[] = ['getVersionRelatedIssues', 'GET', '/rest/api/2/version/{id}/relatedIssueCounts'];
$blocksMU[] = ['getVersionUnresolvedIssues', 'GET', '/rest/api/2/version/{id}/unresolvedIssueCount'];
$blocksMU[] = ['getRemoteVersionLinksByVersionId', 'GET', '/rest/api/2/version/{versionId}/remotelink'];
$blocksMU[] = ['createRemoteVersionLink', 'POST', '/rest/api/2/version/{versionId}/remotelink'];
$blocksMU[] = ['updateRemoteVersionLink', 'POST', '/rest/api/2/version/{versionId}/remotelink'];
$blocksMU[] = ['deleteRemoteVersionLinks', 'DELETE', '/rest/api/2/version/{versionId}/remotelink'];
$blocksMU[] = ['getRemoteVersionLink', 'GET', '/rest/api/2/version/{versionId}/remotelink/{globalId}'];
$blocksMU[] = ['deleteSingleRemoteVersionLink', 'DELETE', '/rest/api/2/version/{versionId}/remotelink/{globalId}'];
$blocksMU[] = ['getRemoteVersionLinks', 'GET', '/rest/api/2/version/remotelink'];
$blocksMU[] = ['getAllWorkflows', 'GET', '/rest/api/2/workflow'];
$blocksMU[] = ['deleteWorkflowProperty', 'DELETE', '/rest/api/2/workflow/transitions/{transitionId}/properties'];
$blocksMU[] = ['createWorkflowProperty', 'POST', '/rest/api/2/workflow/transitions/{transitionId}/properties'];
$blocksMU[] = ['updateWorkflowProperty', 'PUT', '/rest/api/2/workflow/transitions/{transitionId}/properties'];
$blocksMU[] = ['getWorkflowProperties', 'GET', '/rest/api/2/workflow/transitions/{transitionId}/properties'];
$blocksMU[] = ['createWorkflowScheme', 'POST', '/rest/api/2/workflowscheme'];
$blocksMU[] = ['deleteWorkflowScheme', 'DELETE', '/rest/api/2/workflowscheme/{id}'];
$blocksMU[] = ['getWorkflowScheme', 'GET', '/rest/api/2/workflowscheme/{id}'];
$blocksMU[] = ['updateWorkflowScheme', 'PUT', '/rest/api/2/workflowscheme/{id}'];
$blocksMU[] = ['createDraftForScheme', 'POST', '/rest/api/2/workflowscheme/{id}/createdraft'];
$blocksMU[] = ['deleteDefaultWorkflowScheme', 'DELETE', '/rest/api/2/workflowscheme/{id}/default'];
$blocksMU[] = ['updateDefaultWorkflowScheme', 'PUT', '/rest/api/2/workflowscheme/{id}/default'];
$blocksMU[] = ['getDefaultWorkflowScheme', 'GET', '/rest/api/2/workflowscheme/{id}/default'];
$blocksMU[] = ['getDraftWorkflowScheme', 'GET', '/rest/api/2/workflowscheme/{id}/draft'];
$blocksMU[] = ['deleteDraftWorkflowScheme', 'DELETE', '/rest/api/2/workflowscheme/{id}/draft'];
$blocksMU[] = ['updateDraftWorkflowScheme', 'PUT', '/rest/api/2/workflowscheme/{id}/draft'];
$blocksMU[] = ['getDefaultDraftWorkflowScheme', 'GET', '/rest/api/2/workflowscheme/{id}/draft/default'];
$blocksMU[] = ['deleteDefaultDraftWorkflowScheme', 'DELETE', '/rest/api/2/workflowscheme/{id}/draft/default'];
$blocksMU[] = ['updateDefaultDraftWorkflowScheme', 'PUT', '/rest/api/2/workflowscheme/{id}/draft/default'];
$blocksMU[] = ['getDraftSchemeIssueType', 'GET', '/rest/api/2/workflowscheme/{id}/draft/issuetype/{issueType}'];
$blocksMU[] = ['deleteDraftSchemeIssueType', 'DELETE', '/rest/api/2/workflowscheme/{id}/draft/issuetype/{issueType}'];
$blocksMU[] = ['setDraftSchemeIssueType', 'PUT', '/rest/api/2/workflowscheme/{id}/draft/issuetype/{issueType}'];
$blocksMU[] = ['getDraftWorkflow', 'GET', '/rest/api/2/workflowscheme/{id}/draft/workflow'];
$blocksMU[] = ['deleteDraftWorkflowMapping', 'DELETE', '/rest/api/2/workflowscheme/{id}/draft/workflow'];
$blocksMU[] = ['updateDraftWorkflowMapping', 'PUT', '/rest/api/2/workflowscheme/{id}/draft/workflow'];
$blocksMU[] = ['getWorkflowSchemeIssueType', 'GET', '/rest/api/2/workflowscheme/{id}/issuetype/{issueType}'];
$blocksMU[] = ['deleteWorkflowSchemeIssueType', 'DELETE', '/rest/api/2/workflowscheme/{id}/issuetype/{issueType}'];
$blocksMU[] = ['setWorkflowSchemeIssueType', 'PUT', '/rest/api/2/workflowscheme/{id}/issuetype/{issueType}'];
$blocksMU[] = ['getWorkflow', 'GET', '/rest/api/2/workflowscheme/{id}/workflow'];
$blocksMU[] = ['deleteWorkflow', 'DELETE', '/rest/api/2/workflowscheme/{id}/workflow'];
$blocksMU[] = ['updateWorkflowMapping', 'PUT', '/rest/api/2/workflowscheme/{id}/workflow'];
$blocksMU[] = ['getWorklogsDeletedSince', 'GET', '/rest/api/2/worklog/deleted'];
$blocksMU[] = ['getWorklogs', 'POST', '/rest/api/2/worklog/list'];
$blocksMU[] = ['getWorklogsModifiedSince', 'GET', '/rest/api/2/worklog/updated'];

return $blocksMU;