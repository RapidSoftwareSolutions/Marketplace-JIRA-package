<?php
return array (
    'package' => 'JIRA',
    'tagline' => 'Jira is used for issue tracking and project management by over 25,000 customers in 122 countries around the globe.',
    'description' => 'Jira is used for issue tracking and project management by over 25,000 customers in 122 countries around the globe.',
    'image' => 'https://logo.clearbit.com/jira.atlassian.com?s=128',
    'repo' => 'https://github.com/RapidSoftwareSolutions/Marketplace-JIRA-package',
    'keywords' =>
        array (
            'API',
            'JIRA',
        ),
    'accounts' =>
        array (
            'domain' => 'jira.atlassian.com',
            'credentials' =>
                array (
                    'jiraUsername', 'jiraPassword'
                ),
        ),
    'blocks' => array (
        array (
            'name' => 'getMyPermissions',
            'description' => 'Returns all permissions in the system and whether the currently logged in user has them.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectKey',
                    'type' => 'String',
                    'info' => 'Key of project to scope returned permissions for.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectId',
                    'type' => 'String',
                    'info' => 'Id of project to scope returned permissions for.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueKey',
                    'type' => 'String',
                    'info' => 'Key of the issue to scope returned permissions for.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueId',
                    'type' => 'String',
                    'info' => 'Id of the issue to scope returned permissions for.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getAllPermissions',
            'description' => 'Returns all permissions that are present in the JIRA instance - Global, Project and the global ones added by plugins.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getProperty',
            'description' => 'Returns an application property.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'A String containing the property key. Example "jira.home".',
                    'required' => true,
                ),
                array (
                    'name' => 'permissionLevel',
                    'type' => 'String',
                    'info' => 'When fetching a list specifies the permission level of all items in the list.',
                    'required' => false,
                ),
                array (
                    'name' => 'keyFilter',
                    'type' => 'String',
                    'info' => 'When fetching a list allows the list to be filtered by the property\'s start of key e.g.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'setProperty',
            'description' => 'Modify an application property via PUT.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertiesId',
                    'type' => 'String',
                    'info' => 'Application property identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'If present in the PUT will override the existing value.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAdvancedSettings',
            'description' => 'Returns the properties that are displayed on the "General Configuration > Advanced Settings" page.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getApplicationRoles',
            'description' => 'Returns all ApplicationRoles in the system. Will also return an ETag header containing a version hash of thecollection of ApplicationRoles.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleApplicationRole',
            'description' => 'Returns the ApplicationRole with passed key if it exists.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleKey',
                    'type' => 'String',
                    'info' => 'ApplicationRole key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleAttachment',
            'description' => 'Returns the meta-data for an attachment, including the URI of the actual attached file.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'attachmentId',
                    'type' => 'String',
                    'info' => 'Attachment identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'removeSingleAttachment',
            'description' => 'Remove an attachment from an issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'attachmentId',
                    'type' => 'String',
                    'info' => 'Attachment identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAuditingRecords',
            'description' => 'Returns auditing records filtered using provided parameters.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Text query, each record that will be returned must contain the provided text in one of its fields.',
                    'required' => false,
                ),
                array (
                    'name' => 'offset',
                    'type' => 'Number',
                    'info' => 'The number of record from which search starts.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'Number',
                    'info' => 'Maximum number of returned results (if is limit is <= 0 or > 1000, it will be set do default value: 1000).',
                    'required' => false,
                ),
                array (
                    'name' => 'from',
                    'type' => 'String',
                    'info' => 'Timestamp in past. \'from\' must be less or equal \'to\'',
                    'required' => false,
                ),
                array (
                    'name' => 'to',
                    'type' => 'String',
                    'info' => 'Timestamp in past; \'from\' must be less or equal \'to\'.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addAuditingRecord',
            'description' => 'Store a record in Audit Log.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'remoteAddress',
                    'type' => 'String',
                    'info' => 'Record remote address.',
                    'required' => false,
                ),
                array (
                    'name' => 'authorKey',
                    'type' => 'String',
                    'info' => 'Record authorkey.',
                    'required' => false,
                ),
                array (
                    'name' => 'eventSource',
                    'type' => 'String',
                    'info' => 'Record event source.',
                    'required' => false,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Record description.',
                    'required' => false,
                ),
                array (
                    'name' => 'summary',
                    'type' => 'String',
                    'info' => 'Record summary.',
                    'required' => false,
                ),
                array (
                    'name' => 'created',
                    'type' => 'String',
                    'info' => 'Record created.',
                    'required' => false,
                ),
                array (
                    'name' => 'category',
                    'type' => 'String',
                    'info' => 'Record category.',
                    'required' => false,
                ),
                array (
                    'name' => 'objectItemId',
                    'type' => 'String',
                    'info' => 'Record ObjectItem identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'objectItemName',
                    'type' => 'String',
                    'info' => 'Record ObjectItem name.',
                    'required' => false,
                ),
                array (
                    'name' => 'objectItemTypeName',
                    'type' => 'String',
                    'info' => 'Record ObjectItem type name.',
                    'required' => false,
                ),
                array (
                    'name' => 'objectItemParentId',
                    'type' => 'String',
                    'info' => 'Record ObjectItem parent identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'objectItemParentName',
                    'type' => 'String',
                    'info' => 'Record ObjectItem parent name.',
                    'required' => false,
                ),
                array (
                    'name' => 'changedValues',
                    'type' => 'Array',
                    'info' => 'Record changed values.',
                    'required' => false,
                ),
                array (
                    'name' => 'associatedItems',
                    'type' => 'Array',
                    'info' => 'Record associated items.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getAllSystemAvatars',
            'description' => 'Returns all system avatars of the given type.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'avatarType',
                    'type' => 'String',
                    'info' => 'System avatar type.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getCommentPropertiesKeys',
            'description' => 'Returns the keys of all properties for the comment identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'commentId',
                    'type' => 'String',
                    'info' => 'Comment identified.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteCommentProperty',
            'description' => 'Removes the property from the comment identified by the key or by the id. Ths user removing the property is requiredto have permissions to administer the comment.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'commentId',
                    'type' => 'String',
                    'info' => 'Comment identified.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setCommentProperty',
            'description' => 'Sets the value of the specified comment\'s property.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'commentId',
                    'type' => 'String',
                    'info' => 'Comment identified.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Property value.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getCommentProperty',
            'description' => 'Returns the value of the property with a given key from the comment identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'commentId',
                    'type' => 'String',
                    'info' => 'Comment identified.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createComponent',
            'description' => 'Create a component.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Component name.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Component description.',
                    'required' => false,
                ),
                array (
                    'name' => 'leadUserName',
                    'type' => 'String',
                    'info' => 'Component lead user name.',
                    'required' => false,
                ),
                array (
                    'name' => 'assigneeType',
                    'type' => 'String',
                    'info' => 'Component assignee type. One of "PROJECT_DEFAULT","COMPONENT_LEAD","PROJECT_LEAD","UNASSIGNED".',
                    'required' => false,
                ),
                array (
                    'name' => 'isAssigneeTypeValid',
                    'type' => 'Boolean',
                    'info' => 'Component is assignee type valid.',
                    'required' => false,
                ),
                array (
                    'name' => 'project',
                    'type' => 'String',
                    'info' => 'Project key.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectId',
                    'type' => 'Number',
                    'info' => 'Project identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'lead',
                    'type' => 'String',
                    'info' => 'Component lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'assignee',
                    'type' => 'String',
                    'info' => 'Component assignee.',
                    'required' => false,
                ),
                array (
                    'name' => 'realAssigneeType',
                    'type' => 'String',
                    'info' => 'Real assignee type. One of "PROJECT_DEFAULT","COMPONENT_LEAD","PROJECT_LEAD","UNASSIGNED"',
                    'required' => false,
                ),
                array (
                    'name' => 'realAssignee',
                    'type' => 'String',
                    'info' => 'Component real assignee.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateComponent',
            'description' => 'Modify a component.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'componentId',
                    'type' => 'String',
                    'info' => 'Component identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Component name.',
                    'required' => false,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Component description.',
                    'required' => false,
                ),
                array (
                    'name' => 'leadUserName',
                    'type' => 'String',
                    'info' => 'Component lead user name.',
                    'required' => false,
                ),
                array (
                    'name' => 'assigneeType',
                    'type' => 'String',
                    'info' => 'Assignee type. One of "PROJECT_DEFAULT","COMPONENT_LEAD","PROJECT_LEAD","UNASSIGNED".',
                    'required' => false,
                ),
                array (
                    'name' => 'isAssigneeTypeValid',
                    'type' => 'Boolean',
                    'info' => 'Is assignee type valid.',
                    'required' => false,
                ),
                array (
                    'name' => 'project',
                    'type' => 'String',
                    'info' => 'Component project.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectId',
                    'type' => 'Number',
                    'info' => 'Component project identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'lead',
                    'type' => 'String',
                    'info' => 'Component lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'assignee',
                    'type' => 'String',
                    'info' => 'Component assignee.',
                    'required' => false,
                ),
                array (
                    'name' => 'realAssigneeType',
                    'type' => 'String',
                    'info' => 'Real assignee type. One of "PROJECT_DEFAULT","COMPONENT_LEAD","PROJECT_LEAD","UNASSIGNED".',
                    'required' => false,
                ),
                array (
                    'name' => 'realAssignee',
                    'type' => 'String',
                    'info' => 'Real assignee.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getComponent',
            'description' => 'Returns a project component.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'componentId',
                    'type' => 'String',
                    'info' => 'Component identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteComponent',
            'description' => 'Delete a project component.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'componentId',
                    'type' => 'String',
                    'info' => 'Component identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'moveIssuesTo',
                    'type' => 'String',
                    'info' => 'The new component applied to issues whose \'id\' component will be deleted. If this value is null, then the \'id\' component is simply removed from the related isues.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getComponentIssuesCounts',
            'description' => 'Returns counts of issues related to this component.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'componentId',
                    'type' => 'String',
                    'info' => 'Component identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getConfiguration',
            'description' => 'Returns the information if the optional features in JIRA are enabled or disabled.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSelectedTimeTracking',
            'description' => 'Returns the currently selected time-tracking implementation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'selectTimeTracking',
            'description' => 'Selects a time tracking implementation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'Implementation key.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Implementation name.',
                    'required' => false,
                ),
                array (
                    'name' => 'url',
                    'type' => 'String',
                    'info' => 'Implementation Url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'disableTimeTracking',
            'description' => 'Disables time tracking.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getTimeTrackingList',
            'description' => 'Retrieve the list of available time tracking implementations.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getTimeTrackingConfiguration',
            'description' => 'Returns the configuration options for time tracking.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setTimeTrackingConfiguration',
            'description' => 'Sets the options for time tracking.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'workingHoursPerDay',
                    'type' => 'Number',
                    'info' => 'Working hours per day.',
                    'required' => false,
                ),
                array (
                    'name' => 'workingDaysPerWeek',
                    'type' => 'Number',
                    'info' => 'Working days per week.',
                    'required' => false,
                ),
                array (
                    'name' => 'timeFormat',
                    'type' => 'String',
                    'info' => 'Time format. One of "pretty","days","hours".',
                    'required' => false,
                ),
                array (
                    'name' => 'defaultUnit',
                    'type' => 'String',
                    'info' => 'Default unit. One of "minute","hour","day","week".',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSingleCustomFieldOption',
            'description' => 'Returns a full representation of the Custom Field Option that has the given id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'optionId',
                    'type' => 'String',
                    'info' => 'Option identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getDashboards',
            'description' => 'Returns a list of all dashboards, optionally filtering them.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'An optional filter that is applied to the list of dashboards. Example "favourite", "my".',
                    'required' => false,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The index of the first dashboard to return (0-based). must be 0 or a multiple ofmaxResults.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'A hint as to the the maximum number of dashboards to return in each call.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSingleDashboard',
            'description' => 'Returns a single dashboard.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'dashboardId',
                    'type' => 'String',
                    'info' => 'Dashboard identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getDashboardPropertiesKeys',
            'description' => 'Returns the keys of all properties for the dashboard item identified by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'dashboardId',
                    'type' => 'String',
                    'info' => 'Dashboard identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'itemId',
                    'type' => 'String',
                    'info' => 'Item identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteDashboardProperty',
            'description' => 'Removes the property from the dashboard item identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'dashboardId',
                    'type' => 'String',
                    'info' => 'Dashboard identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'itemId',
                    'type' => 'String',
                    'info' => 'Item identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setDashboardProperty',
            'description' => 'Sets the value of the specified dashboard item\'s property.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'dashboardId',
                    'type' => 'String',
                    'info' => 'Dashboard identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'itemId',
                    'type' => 'String',
                    'info' => 'Item identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getDashboardProperty',
            'description' => 'Returns the value of the property with a given key from the dashboard item identified by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'dashboardId',
                    'type' => 'String',
                    'info' => 'Dashboard identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'itemId',
                    'type' => 'String',
                    'info' => 'Item identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createCustomField',
            'description' => 'Creates a custom field using a definition.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Custom field name.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Custom field description.',
                    'required' => false,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Custom field type.',
                    'required' => false,
                ),
                array (
                    'name' => 'searcherKey',
                    'type' => 'String',
                    'info' => 'Custom field searcher key.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getFields',
            'description' => 'Returns a list of all fields, both System and Custom.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createSelectFieldOption',
            'description' => 'Creates an option for a select list issue field, for a given field key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldKey',
                    'type' => 'String',
                    'info' => 'Field key.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Option value.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSelectFieldOptions',
            'description' => 'Returns all options defined for a select list issue field, for a given field key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldKey',
                    'type' => 'String',
                    'info' => 'Field key.',
                    'required' => true,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The starting index of the returned objects. Base index: 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'The maximum number of items to return per page. Default: 50.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateSelectFieldOptions',
            'description' => 'Updates an option for a select list issue field, for a given field key and option Id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldKey',
                    'type' => 'String',
                    'info' => 'Field key.',
                    'required' => true,
                ),
                array (
                    'name' => 'optionId',
                    'type' => 'String',
                    'info' => 'Option identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'id',
                    'type' => 'Number',
                    'info' => 'Identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Option value.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertiesLeaderName',
                    'type' => 'String',
                    'info' => 'Options leader name.',
                    'required' => false,
                ),
                array (
                    'name' => 'propertiesLeaderEmail',
                    'type' => 'String',
                    'info' => 'Options leader email.',
                    'required' => false,
                ),
                array (
                    'name' => 'propertiesMembers',
                    'type' => 'String',
                    'info' => 'Options members.',
                    'required' => false,
                ),
                array (
                    'name' => 'propertiesDescription',
                    'type' => 'String',
                    'info' => 'Options description.',
                    'required' => false,
                ),
                array (
                    'name' => 'configScopeProjects',
                    'type' => 'String',
                    'info' => 'Comma separated options config scope projects identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'configAttributes',
                    'type' => 'Array',
                    'info' => 'Options config attributes.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSelectFieldSingleOption',
            'description' => 'Returns an option for a select list issue field, for a given field key and option Id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldKey',
                    'type' => 'String',
                    'info' => 'Field key.',
                    'required' => true,
                ),
                array (
                    'name' => 'optionId',
                    'type' => 'String',
                    'info' => 'Option identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteSelectFieldSingleOption',
            'description' => 'Deletes an option from a select list issue field, for a given field key and option Id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldKey',
                    'type' => 'String',
                    'info' => 'Field key.',
                    'required' => true,
                ),
                array (
                    'name' => 'optionId',
                    'type' => 'String',
                    'info' => 'Option identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAvailableSelectFieldOptions',
            'description' => 'Returns the options defined for a select list issue field that are available to the currently logged-in user and can be assigned to an issue, for a given field key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldKey',
                    'type' => 'String',
                    'info' => 'Field key.',
                    'required' => true,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The starting index of the returned objects. Base index: 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'The maximum number of items to return per page. Default: 50.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectId',
                    'type' => 'Number',
                    'info' => 'Only options available for this project will be returned.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'searchSelectFieldOptions',
            'description' => 'Returns the options defined for a select list issue field that are available to the currently logged-in user, for a given field key. The list of options will be paginated.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldKey',
                    'type' => 'String',
                    'info' => 'Field key.',
                    'required' => true,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The starting index of the returned objects. Base index: 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'The maximum number of items to return per page. Default: 50.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectId',
                    'type' => 'Number',
                    'info' => 'Only options available for this project will be returned.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createFilter',
            'description' => 'Creates a new filter, and returns newly created filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'New filter name.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'New filter description.',
                    'required' => false,
                ),
                array (
                    'name' => 'jql',
                    'type' => 'String',
                    'info' => 'New filter Jql string.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
                array (
                    'name' => 'favourite',
                    'type' => 'Boolean',
                    'info' => 'New filter is favourite.',
                    'required' => false,
                ),
                array (
                    'name' => 'owner',
                    'type' => 'String',
                    'info' => 'Owner.',
                    'required' => false,
                ),
                array (
                    'name' => 'viewUrl',
                    'type' => 'String',
                    'info' => 'View Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'searchUrl',
                    'type' => 'String',
                    'info' => 'Search Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'sharePermissions',
                    'type' => 'Array',
                    'info' => 'Filter Permission.',
                    'required' => false,
                ),
                array (
                    'name' => 'sharedUsers',
                    'type' => 'JSON',
                    'info' => 'User Bean List Wrapper.',
                    'required' => false,
                ),
                array (
                    'name' => 'subscriptions',
                    'type' => 'JSON',
                    'info' => 'Filter Subscription Bean List Wrapper.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateFilter',
            'description' => 'Updates an existing filter, and returns its new value.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'New filter name.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'New filter description.',
                    'required' => false,
                ),
                array (
                    'name' => 'jql',
                    'type' => 'String',
                    'info' => 'New filter Jql string.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
                array (
                    'name' => 'favourite',
                    'type' => 'Boolean',
                    'info' => 'New filter is favourite.',
                    'required' => false,
                ),
                array (
                    'name' => 'owner',
                    'type' => 'String',
                    'info' => 'Owner.',
                    'required' => false,
                ),
                array (
                    'name' => 'viewUrl',
                    'type' => 'String',
                    'info' => 'View Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'searchUrl',
                    'type' => 'String',
                    'info' => 'Search Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'sharePermissions',
                    'type' => 'Array',
                    'info' => 'Filter Permission.',
                    'required' => false,
                ),
                array (
                    'name' => 'sharedUsers',
                    'type' => 'JSON',
                    'info' => 'User Bean List Wrapper.',
                    'required' => false,
                ),
                array (
                    'name' => 'subscriptions',
                    'type' => 'JSON',
                    'info' => 'Filter Subscription Bean List Wrapper.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteFilter',
            'description' => 'Delete a filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getFilter',
            'description' => 'Returns a filter given an id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getFilterDefaultColumns',
            'description' => 'Returns the default columns for the given filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setFilterDefaultColumns',
            'description' => 'Sets the default columns for the given filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'resetFilterDefaultColumns',
            'description' => 'Resets the columns for the given filter such that the filter no longer has its own column config.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getFilterSharePermissions',
            'description' => 'Returns all share permissions of the given filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addFilterSharePermissions',
            'description' => 'Adds a share permissions to the given filter. Adding a global permission removes all previous permissions from the filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Filter type.',
                    'required' => false,
                ),
                array (
                    'name' => 'groupname',
                    'type' => 'String',
                    'info' => 'Filter groupname.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectId',
                    'type' => 'String',
                    'info' => 'Filter project identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectRoleId',
                    'type' => 'String',
                    'info' => 'Filter project role identifier.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getFilterSingleSharePermission',
            'description' => 'Returns a single share permission of the given filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'permissionId',
                    'type' => 'String',
                    'info' => 'Permission identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteFilterSingleSharePermission',
            'description' => 'Removes a share permissions from the given filter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'filterId',
                    'type' => 'String',
                    'info' => 'Filter identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'permissionId',
                    'type' => 'String',
                    'info' => 'Permission identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getDefaultShareScope',
            'description' => 'Returns the default share scope of the logged-in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setDefaultShareScope',
            'description' => 'Sets the default share scope of the logged-in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'scope',
                    'type' => 'String',
                    'info' => 'Share scope. One of "GLOBAL","AUTHENTICATED","PRIVATE".',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getFavouriteFilters',
            'description' => 'Returns the favourite filters of the logged-in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMyFilters',
            'description' => 'Returns the owned filters of the logged-in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
                array (
                    'name' => 'includeFavourites',
                    'type' => 'Boolean',
                    'info' => 'Include favourites.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createGroup',
            'description' => 'Creates a group by given group parameter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Group name.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteGroup',
            'description' => 'Deletes a group by given group parameter.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'groupname',
                    'type' => 'String',
                    'info' => 'The name of the group to delete.',
                    'required' => true,
                ),
                array (
                    'name' => 'swapGroup',
                    'type' => 'String',
                    'info' => 'Specify a different group to transfer the restrictions comments and worklogs to.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getUsersFromGroup',
            'description' => 'Returns a paginated list of users who are members of the specified group and its subgroups.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'groupname',
                    'type' => 'String',
                    'info' => 'A name of the group for which members will be returned.',
                    'required' => true,
                ),
                array (
                    'name' => 'includeInactiveUsers',
                    'type' => 'Boolean',
                    'info' => 'Inactive users will be included in the response if set to true.',
                    'required' => false,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The index of the first user in group to return (0 based).',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'The maximum number of users to return (max 50).',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addUserToGroup',
            'description' => 'Adds given user to a group. Returns the current state of the group.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'groupname',
                    'type' => 'String',
                    'info' => 'A name of requested group.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'User name.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteUserFromGroup',
            'description' => 'Removes given user from a group.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'groupname',
                    'type' => 'String',
                    'info' => 'A name of requested group.',
                    'required' => true,
                ),
                array (
                    'name' => 'username',
                    'type' => 'String',
                    'info' => 'User to remove from a group.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'findGroups',
            'description' => 'Returns groups with substrings matching a given query.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'query',
                    'type' => 'String',
                    'info' => 'A String to match groups agains.',
                    'required' => false,
                ),
                array (
                    'name' => 'exclude',
                    'type' => 'String',
                    'info' => 'Exclude group.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'Max results.',
                    'required' => false,
                ),
                array (
                    'name' => 'userName',
                    'type' => 'String',
                    'info' => 'User name.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'findUsersAndGroups',
            'description' => 'Returns a list of users and groups matching query with highlighting.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'query',
                    'type' => 'String',
                    'info' => 'A string used to search username, Name or e-mail address.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'The maximum number of users to return (defaults to 50).',
                    'required' => false,
                ),
                array (
                    'name' => 'showAvatar',
                    'type' => 'Boolean',
                    'info' => 'Show avatar.',
                    'required' => false,
                ),
                array (
                    'name' => 'fieldId',
                    'type' => 'String',
                    'info' => 'The custom field id.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectId',
                    'type' => 'String',
                    'info' => 'The list of project ids to further restrict the search.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'The list of issue type ids to further restrict the search.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createSingleIssue',
            'description' => 'Creates an issue or a sub-task from a JSON representation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'update',
                    'type' => 'JSON',
                    'info' => 'Update.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'JSON',
                    'info' => 'New issue fields.',
                    'required' => false,
                ),
                array (
                    'name' => 'transition',
                    'type' => 'JSON',
                    'info' => 'New issue transition.',
                    'required' => false,
                ),
                array (
                    'name' => 'historyMetadata',
                    'type' => 'JSON',
                    'info' => 'New issue history metadata.',
                    'required' => false,
                ),
                array (
                    'name' => 'properties',
                    'type' => 'Array',
                    'info' => 'Entity properties.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createIssues',
            'description' => 'Creates issues or sub-tasks from a JSON representation. Creates many issues in one bulk operation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueUpdates',
                    'type' => 'Array',
                    'info' => 'Issue updates Object.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSingleIssue',
            'description' => 'Returns a full representation of the issue for the given issue key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'The list of fields to return for the issue. By default, all fields are returned.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Expand.',
                    'required' => false,
                ),
                array (
                    'name' => 'properties',
                    'type' => 'String',
                    'info' => 'The list of properties to return for the issue.',
                    'required' => false,
                ),
                array (
                    'name' => 'fieldsByKeys',
                    'type' => 'Boolean',
                    'info' => 'If true then fields in issues will be referenced by keys instead of ids.',
                    'required' => false,
                ),
                array (
                    'name' => 'updateHistory',
                    'type' => 'Boolean',
                    'info' => 'Update history.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteSingleIssue',
            'description' => 'Delete an issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateSingleIssue',
            'description' => 'Edits an issue from a JSON representation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'notifyUsers',
                    'type' => 'Boolean',
                    'info' => 'Send the email with notification that the issue was updated to users that watch it.',
                    'required' => false,
                ),
                array (
                    'name' => 'overrideScreenSecurity',
                    'type' => 'Boolean',
                    'info' => 'Allows to update fields that are not on the screen.',
                    'required' => false,
                ),
                array (
                    'name' => 'overrideEditableFlag',
                    'type' => 'Boolean',
                    'info' => 'Updates the issue even if the issue is not editable due to being in a status with jira.issue.editable set to false or missing.',
                    'required' => false,
                ),
                array (
                    'name' => 'transition',
                    'type' => 'JSON',
                    'info' => 'Transition properties.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'JSON',
                    'info' => 'Fields properties.',
                    'required' => false,
                ),
                array (
                    'name' => 'update',
                    'type' => 'JSON',
                    'info' => 'Update properties.',
                    'required' => false,
                ),
                array (
                    'name' => 'historyMetadata',
                    'type' => 'JSON',
                    'info' => 'HistoryMetadata properties.',
                    'required' => false,
                ),
                array (
                    'name' => 'properties',
                    'type' => 'Array',
                    'info' => 'Issue properties.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'assignIssueToUser',
            'description' => 'Assigns an issue to a user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'User name.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'Key.',
                    'required' => false,
                ),
                array (
                    'name' => 'accountId',
                    'type' => 'String',
                    'info' => 'Account identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'emailAddress',
                    'type' => 'String',
                    'info' => 'Email address.',
                    'required' => false,
                ),
                array (
                    'name' => 'avatarUrls',
                    'type' => 'JSON',
                    'info' => 'Avatar Urls.',
                    'required' => false,
                ),
                array (
                    'name' => 'displayName',
                    'type' => 'String',
                    'info' => 'Display name.',
                    'required' => false,
                ),
                array (
                    'name' => 'active',
                    'type' => 'Boolean',
                    'info' => 'Is active.',
                    'required' => false,
                ),
                array (
                    'name' => 'timeZone',
                    'type' => 'String',
                    'info' => 'TimeZone.',
                    'required' => false,
                ),
                array (
                    'name' => 'locale',
                    'type' => 'String',
                    'info' => 'Locale.',
                    'required' => false,
                ),
                array (
                    'name' => 'groups',
                    'type' => 'String',
                    'info' => 'Groups.',
                    'required' => false,
                ),
                array (
                    'name' => 'applicationRoles',
                    'type' => 'String',
                    'info' => 'Application roles.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getIssueComments',
            'description' => 'Returns all comments for an issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The page offset, if not specified then defaults to 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'How many results on the page should be included. Defaults to 50.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Optional flags: renderedBody (provides body rendered in HTML).',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addCommentToIssue',
            'description' => 'Adds a new comment to an issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Optional flags: renderedBody (provides body rendered in HTML).',
                    'required' => false,
                ),
                array (
                    'name' => 'body',
                    'type' => 'String',
                    'info' => 'Comment body.',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityType',
                    'type' => 'String',
                    'info' => 'Visibility type. One of "group","role".',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityValue',
                    'type' => 'String',
                    'info' => 'Visibility value.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateIssueComment',
            'description' => 'Updates an existing comment using its JSON representation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'commentId',
                    'type' => 'String',
                    'info' => 'Comment identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Optional flags: renderedBody (provides body rendered in HTML).',
                    'required' => false,
                ),
                array (
                    'name' => 'body',
                    'type' => 'String',
                    'info' => 'Comment body.',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityType',
                    'type' => 'String',
                    'info' => 'Visibility type. One of "group","role".',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityValue',
                    'type' => 'String',
                    'info' => 'Visibility value.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteIssueComment',
            'description' => 'Deletes an existing comment.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key',
                    'required' => true,
                ),
                array (
                    'name' => 'commentId',
                    'type' => 'String',
                    'info' => 'Comment identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueSingleComment',
            'description' => 'Returns a single comment.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key',
                    'required' => true,
                ),
                array (
                    'name' => 'commentId',
                    'type' => 'String',
                    'info' => 'Comment identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Optional flags: renderedBody (provides body rendered in HTML).',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'sendIssueNotify',
            'description' => 'Sends a notification (email) to the list or recipients defined in the request.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'subject',
                    'type' => 'String',
                    'info' => 'Notify subject.',
                    'required' => true,
                ),
                array (
                    'name' => 'textBody',
                    'type' => 'String',
                    'info' => 'Notify text body.',
                    'required' => false,
                ),
                array (
                    'name' => 'htmlBody',
                    'type' => 'String',
                    'info' => 'Notify Html body.',
                    'required' => false,
                ),
                array (
                    'name' => 'showToReporter',
                    'type' => 'Boolean',
                    'info' => 'Show to reporter.',
                    'required' => false,
                ),
                array (
                    'name' => 'showToAssignee',
                    'type' => 'Boolean',
                    'info' => 'Show to assignee.',
                    'required' => false,
                ),
                array (
                    'name' => 'showToWatchers',
                    'type' => 'Boolean',
                    'info' => 'Show to watchers.',
                    'required' => false,
                ),
                array (
                    'name' => 'showToVoters',
                    'type' => 'Boolean',
                    'info' => 'Show to voters.',
                    'required' => false,
                ),
                array (
                    'name' => 'showToUsers',
                    'type' => 'Array',
                    'info' => 'Show to users.',
                    'required' => false,
                ),
                array (
                    'name' => 'showToGroups',
                    'type' => 'Array',
                    'info' => 'Show to groups.',
                    'required' => false,
                ),
                array (
                    'name' => 'restrictGroups',
                    'type' => 'Array',
                    'info' => 'Restrict groups.',
                    'required' => false,
                ),
                array (
                    'name' => 'restrictPermissions',
                    'type' => 'Array',
                    'info' => 'Restrict groups.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getRemoteIssueLinks',
            'description' => 'A REST sub-resource representing the remote issue links on the issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key',
                    'required' => true,
                ),
                array (
                    'name' => 'globalId',
                    'type' => 'String',
                    'info' => 'The id of the remote issue link to be returned.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createRemoteIssueLink',
            'description' => 'Create remote issue link from a JSON representation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueLinkUrl',
                    'type' => 'String',
                    'info' => 'Remote issue link Url.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueLinkTitle',
                    'type' => 'String',
                    'info' => 'Remote issue link title.',
                    'required' => true,
                ),
                array (
                    'name' => 'applicationType',
                    'type' => 'String',
                    'info' => 'Application type.',
                    'required' => false,
                ),
                array (
                    'name' => 'applicationName',
                    'type' => 'String',
                    'info' => 'Application name.',
                    'required' => false,
                ),
                array (
                    'name' => 'relationship',
                    'type' => 'String',
                    'info' => 'Relationship.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkSummary',
                    'type' => 'String',
                    'info' => 'Remote issue link summary.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkIconUrl',
                    'type' => 'String',
                    'info' => 'Remote issue link icon Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkIconTitle',
                    'type' => 'String',
                    'info' => 'Remote issue link icon title.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusResolved',
                    'type' => 'Boolean',
                    'info' => 'Remote issue link status resolved.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusIconUrl',
                    'type' => 'String',
                    'info' => 'Remote issue link status icon Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusIconTitle',
                    'type' => 'String',
                    'info' => 'Remote issue link status icon title.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusIconLink',
                    'type' => 'String',
                    'info' => 'Remote issue link status icon link.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteRemoteIssueLinkByGlobalId',
            'description' => 'Delete the remote issue link with the given global id on the issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'globalId',
                    'type' => 'String',
                    'info' => 'The global id of the remote issue link.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getRemoteIssueLinkById',
            'description' => 'Get the remote issue link with the given id on the issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key',
                    'required' => true,
                ),
                array (
                    'name' => 'linkId',
                    'type' => 'String',
                    'info' => 'Link identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateRemoteIssueLink',
            'description' => 'Updates a remote issue link from a JSON representation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'linkId',
                    'type' => 'String',
                    'info' => 'Link identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'globalId',
                    'type' => 'String',
                    'info' => 'Global identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'applicationType',
                    'type' => 'String',
                    'info' => 'Application type.',
                    'required' => false,
                ),
                array (
                    'name' => 'applicationName',
                    'type' => 'String',
                    'info' => 'Application name.',
                    'required' => false,
                ),
                array (
                    'name' => 'relationship',
                    'type' => 'String',
                    'info' => 'Relationship.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkUrl',
                    'type' => 'String',
                    'info' => 'Remote issue link Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkTitle',
                    'type' => 'String',
                    'info' => 'Remote issue link title.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkSummary',
                    'type' => 'String',
                    'info' => 'Remote issue link summary.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkIconUrl',
                    'type' => 'String',
                    'info' => 'Remote issue link icon Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkIconTitle',
                    'type' => 'String',
                    'info' => 'Remote issue link icon title.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusResolved',
                    'type' => 'Boolean',
                    'info' => 'Remote issue link status resolved.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusIconUrl',
                    'type' => 'String',
                    'info' => 'Remote issue link status icon Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusIconTitle',
                    'type' => 'String',
                    'info' => 'Remote issue link status icon title.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueLinkStatusIconLink',
                    'type' => 'String',
                    'info' => 'Remote issue link status icon link.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteRemoteIssueLinkById',
            'description' => 'Delete the remote issue link with the given id on the issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'linkId',
                    'type' => 'String',
                    'info' => 'Link identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueTransitions',
            'description' => 'Get a list of the transitions possible for this issue by the current user, along with fields that are required and their types.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'transitionId',
                    'type' => 'String',
                    'info' => 'Transition identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'skipRemoteOnlyCondition',
                    'type' => 'Boolean',
                    'info' => 'Flag to skip evaluation of {@link RemoteOnlyCondition}, can only be used by add-on users.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'makeIssueTransition',
            'description' => 'Perform a transition on an issue.When performing the transition you can update or set other issue fields.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'transition',
                    'type' => 'JSON',
                    'info' => 'Issue transition.',
                    'required' => true,
                ),
                array (
                    'name' => 'update',
                    'type' => 'JSON',
                    'info' => 'Issue update parameters.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'JSON',
                    'info' => 'Issue fields.',
                    'required' => false,
                ),
                array (
                    'name' => 'historyMetadata',
                    'type' => 'JSON',
                    'info' => 'Issue history metadata.',
                    'required' => false,
                ),
                array (
                    'name' => 'properties',
                    'type' => 'Array',
                    'info' => 'Issue properties.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteIssueVote',
            'description' => 'Remove your vote from an issue. (i.e. "unvote").',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addIssueVote',
            'description' => 'Cast your vote in favour of an issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueVotes',
            'description' => 'A REST sub-resource representing the voters on the issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueWatchers',
            'description' => 'Returns the list of watchers for the issue with the given key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addIssueWatcher',
            'description' => 'Adds a user to an issue\'s watcher list.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'username',
                    'type' => 'String',
                    'info' => 'User name.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteIssueWatcher',
            'description' => 'Removes a user from an issue\'s watcher list.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'username',
                    'type' => 'String',
                    'info' => 'A String containing the name of the user to remove from the watcher list.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getWorklogById',
            'description' => 'Returns a specific worklog.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'worklogId',
                    'type' => 'String',
                    'info' => 'Worklog identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Comma separated list of parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addIssueWorklog',
            'description' => 'Adds a new worklog entry to an issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'comment',
                    'type' => 'String',
                    'info' => 'Worklog comment.',
                    'required' => true,
                ),
                array (
                    'name' => 'started',
                    'type' => 'String',
                    'info' => 'Started. Example "2017-02-21T01:03:28.187+0000".',
                    'required' => true,
                ),
                array (
                    'name' => 'timeSpentSeconds',
                    'type' => 'Number',
                    'info' => 'Time spent in seconds.',
                    'required' => true,
                ),
                array (
                    'name' => 'adjustEstimate',
                    'type' => 'String',
                    'info' => 'Allows you to provide specific instructions to update the remaining time estimate of the issue.',
                    'required' => false,
                ),
                array (
                    'name' => 'newEstimate',
                    'type' => 'String',
                    'info' => 'The new value for the remaining estimate field.',
                    'required' => false,
                ),
                array (
                    'name' => 'reduceBy',
                    'type' => 'String',
                    'info' => 'The amount to reduce the remaining estimate by.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Comma separated list of parameters to expand.',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityType',
                    'type' => 'String',
                    'info' => 'Visibility type. One of "group","role".',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityValue',
                    'type' => 'String',
                    'info' => 'Visibility value.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getIssueWorklog',
            'description' => 'Returns a specific worklog.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Comma separated list of parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateIssueWorklog',
            'description' => 'Updates an existing worklog entry.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'worklogId',
                    'type' => 'String',
                    'info' => 'Worklog identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'adjustEstimate',
                    'type' => 'String',
                    'info' => 'Allows you to provide specific instructions to update the remaining time estimate of the issue.',
                    'required' => false,
                ),
                array (
                    'name' => 'newEstimate',
                    'type' => 'String',
                    'info' => 'The new value for the remaining estimate field.',
                    'required' => false,
                ),
                array (
                    'name' => 'reduceBy',
                    'type' => 'String',
                    'info' => 'The amount to reduce the remaining estimate by.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'Comma separated list of parameters to expand.',
                    'required' => false,
                ),
                array (
                    'name' => 'comment',
                    'type' => 'String',
                    'info' => 'Worklog comment.',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityType',
                    'type' => 'String',
                    'info' => 'Visibility type. One of "group","role".',
                    'required' => false,
                ),
                array (
                    'name' => 'visibilityValue',
                    'type' => 'String',
                    'info' => 'Visibility value.',
                    'required' => false,
                ),
                array (
                    'name' => 'started',
                    'type' => 'String',
                    'info' => 'Started. Example "2017-02-21T01:03:28.187+0000".',
                    'required' => false,
                ),
                array (
                    'name' => 'timeSpentSeconds',
                    'type' => 'Number',
                    'info' => 'Time spent in seconds.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteIssueWorklog',
            'description' => 'Deletes an existing worklog entry.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'worklogId',
                    'type' => 'String',
                    'info' => 'Worklog identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'adjustEstimate',
                    'type' => 'String',
                    'info' => 'Allows you to provide specific instructions to update the remaining time estimate of the issue.',
                    'required' => false,
                ),
                array (
                    'name' => 'newEstimate',
                    'type' => 'String',
                    'info' => 'The new value for the remaining estimate field.',
                    'required' => false,
                ),
                array (
                    'name' => 'increaseBy',
                    'type' => 'String',
                    'info' => 'The amount to increase the remaining estimate by e.g.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCreatedIssueMeta',
            'description' => 'Returns the meta data for creating issues.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIds',
                    'type' => 'String',
                    'info' => 'Comma-separated list, combined with the projectKeys param, lists the projects with which to filter the results.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectKeys',
                    'type' => 'String',
                    'info' => 'Comma-separated list, combined with the projectIds param, lists the projects with which to filter the results.',
                    'required' => false,
                ),
                array (
                    'name' => 'issuetypeIds',
                    'type' => 'String',
                    'info' => 'Comma-separated list, combinded with issuetypeNames, lists the issue types with which to filter the results.',
                    'required' => false,
                ),
                array (
                    'name' => 'issuetypeNames',
                    'type' => 'String',
                    'info' => 'Comma-separated list, Combinded with issuetypeIds, lists the issue types with which to filter the results. If null, all issue types are returned.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getIssuesBasedOnQuery',
            'description' => 'Returns suggested issues which match the auto-completion query for the user which executes this request.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'query',
                    'type' => 'String',
                    'info' => 'The query string.',
                    'required' => true,
                ),
                array (
                    'name' => 'currentJQL',
                    'type' => 'String',
                    'info' => 'The JQL in context of which the request is executed.',
                    'required' => false,
                ),
                array (
                    'name' => 'currentIssueKey',
                    'type' => 'String',
                    'info' => 'The key of the issue in context of which the request is executed.',
                    'required' => false,
                ),
                array (
                    'name' => 'currentProjectId',
                    'type' => 'String',
                    'info' => 'The id of the project in context of which the request is executed.',
                    'required' => false,
                ),
                array (
                    'name' => 'showSubTasks',
                    'type' => 'Boolean',
                    'info' => 'If set to false, subtasks will not be included in the list.',
                    'required' => false,
                ),
                array (
                    'name' => 'showSubTaskParent',
                    'type' => 'Boolean',
                    'info' => 'If set to false and request is executed in context of a subtask, the parent issue will not be included in the auto-completion result, even if it matches the query.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addIssueAttachment',
            'description' => 'Add attachment to an issue.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'Attachment',
                    'type' => 'File',
                    'info' => 'Issue attachment file.',
                    'required' => true,
                ),
            ),
        ),
/* part 2 */
        array (
            'name' => 'getIssuePropertiesKeys',
            'description' => 'Returns the keys of all properties for the issue identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteIssueProperty',
            'description' => 'Removes the property from the issue identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setIssueProperty',
            'description' => 'Sets the value of the specified issue\'s property. You can use this resource to store a custom data against the issue identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Property value.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueProperty',
            'description' => 'Returns the value of the property with a given key from the issue identified or the key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getWorklogPropertiesKeys',
            'description' => 'Returns the keys of all properties for the worklog identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'worklogId',
                    'type' => 'String',
                    'info' => 'Worklog identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteWorklogProperty',
            'description' => 'Removes the property from the worklog identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'worklogId',
                    'type' => 'String',
                    'info' => 'Worklog identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setWorklogProperty',
            'description' => 'Sets the value of the specified worklog\'s property.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'worklogId',
                    'type' => 'String',
                    'info' => 'Worklog identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Property value.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getWorklogProperty',
            'description' => 'Returns the value of the property with a given key from the worklog identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueIdOrKey',
                    'type' => 'String',
                    'info' => 'Issue identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'worklogId',
                    'type' => 'String',
                    'info' => 'Worklog identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createIssueLink',
            'description' => 'Creates an issue link between two issues.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'typeName',
                    'type' => 'String',
                    'info' => 'Type name.',
                    'required' => true,
                ),
                array (
                    'name' => 'typeId',
                    'type' => 'String',
                    'info' => 'Type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'typeInward',
                    'type' => 'String',
                    'info' => 'Type inward.',
                    'required' => false,
                ),
                array (
                    'name' => 'typeOutward',
                    'type' => 'String',
                    'info' => 'Type outward.',
                    'required' => false,
                ),
                array (
                    'name' => 'inwardIssue',
                    'type' => 'JSON',
                    'info' => 'Inward issue. Example {"id": "issueId","key": "issueKey","fields": {"summary": "Issue summary","status": {"statusColor": "#009900","description": "Issue status description","iconUrl": "http://www.example.com/jira/images/icons/priorities/major.png","name": "Name","id": "Id","statusCategory": {"id": 9,"key": "completed","colorName": "green","name": "Completed"}},"issuetype": {"id": "10000","description": "Issue type description","iconUrl": "http://www.example.com/jira/images/icons/priorities/major.png","name": "Name","subtask": false,"avatarId": 10002},"priority": {"statusColor": "#009900","description": "Priority description","iconUrl": "http://www.example.com/jira/images/icons/priorities/major.png","name": "Name","id": "20000"}}}',
                    'required' => false,
                ),
                array (
                    'name' => 'outwardIssue',
                    'type' => 'JSON',
                    'info' => 'Outward issue. Example {"id": "issueId","key": "issueKey","fields": {"summary": "Issue summary","status": {"statusColor": "#009900","description": "Issue status description","iconUrl": "http://www.example.com/jira/images/icons/priorities/major.png","name": "Name","id": "Id","statusCategory": {"id": 9,"key": "completed","colorName": "green","name": "Completed"}},"issuetype": {"id": "10000","description": "Issue type description","iconUrl": "http://www.example.com/jira/images/icons/priorities/major.png","name": "Name","subtask": false,"avatarId": 10002},"priority": {"statusColor": "#009900","description": "Priority description","iconUrl": "http://www.example.com/jira/images/icons/priorities/major.png","name": "Name","id": "20000"}}}',
                    'required' => false,
                ),
                array (
                    'name' => 'commentAuthor',
                    'type' => 'JSON',
                    'info' => 'Comment author. Example {"name": "userName","key": "userKey","accountId": "99:27935d01-92a7-4687-8272-a9b8d3b2ae2e","emailAddress": "fred@example.com","avatarUrls": {"16x16": "http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred","24x24": "http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred"},"displayName": "userDisplayName","active": true,"timeZone": "Australia/Sydney"}',
                    'required' => false,
                ),
                array (
                    'name' => 'commentBody',
                    'type' => 'String',
                    'info' => 'Comment body.',
                    'required' => false,
                ),
                array (
                    'name' => 'commentRenderedBody',
                    'type' => 'String',
                    'info' => 'Comment rendered body.',
                    'required' => false,
                ),
                array (
                    'name' => 'commentVisibilityType',
                    'type' => 'String',
                    'info' => 'Comment visibility type. One of "group", "role".',
                    'required' => false,
                ),
                array (
                    'name' => 'commentVisibilityValue',
                    'type' => 'String',
                    'info' => 'Comment visibility value.',
                    'required' => false,
                ),
                array (
                    'name' => 'commentProperties',
                    'type' => 'Array',
                    'info' => 'Comment entity property.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getIssueLink',
            'description' => 'Returns an issue link with the specified id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'linkId',
                    'type' => 'String',
                    'info' => 'Link identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteIssueLink',
            'description' => 'Deletes an issue link with the specified id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'linkId',
                    'type' => 'String',
                    'info' => 'Link identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueLinkTypes',
            'description' => 'Returns a list of available issue link types, if issue linking is enabled.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createIssueLinkType',
            'description' => 'Create a new issue link type.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name.',
                    'required' => true,
                ),
                array (
                    'name' => 'inward',
                    'type' => 'String',
                    'info' => 'Inward issues.',
                    'required' => false,
                ),
                array (
                    'name' => 'outward',
                    'type' => 'String',
                    'info' => 'Outward issues.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSingleIssueLinkType',
            'description' => 'Returns for a given issue link type identifier all information about this issue link type.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueLinkTypeId',
                    'type' => 'String',
                    'info' => 'Issue link type identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteSingleIssueLinkType',
            'description' => 'Delete the specified issue link type.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueLinkTypeId',
                    'type' => 'String',
                    'info' => 'Issue link type identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateSingleIssueLinkType',
            'description' => 'Update the specified issue link type.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueLinkTypeId',
                    'type' => 'String',
                    'info' => 'Issue link type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name.',
                    'required' => false,
                ),
                array (
                    'name' => 'inward',
                    'type' => 'String',
                    'info' => 'Inward issues.',
                    'required' => false,
                ),
                array (
                    'name' => 'outward',
                    'type' => 'String',
                    'info' => 'Outward issues.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getIssueSecuritySchemes',
            'description' => 'Returns all issue security schemes that are defined.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueSingleSecurityScheme',
            'description' => 'Returns the issue security scheme along with that are defined.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueSecuritySchemesId',
                    'type' => 'String',
                    'info' => 'Issue security schemes identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueAllTypes',
            'description' => 'Returns a list of all issue types visible to the user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createIssueType',
            'description' => 'Creates an issue type from a JSON representation and adds the issue newly created issue type to the default issuetype scheme.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name.',
                    'required' => false,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Description.',
                    'required' => false,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Type.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSingleIssueType',
            'description' => 'Returns a full representation of the issue type that has the given id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteSingleIssueType',
            'description' => 'Deletes the specified issue type.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'alternativeIssueTypeId',
                    'type' => 'String',
                    'info' => 'The identifier of an issue type to which issues associated with the removed issue type will be migrated.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateSingleIssueType',
            'description' => 'Updates the specified issue type from a JSON representation.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name.',
                    'required' => false,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Description.',
                    'required' => false,
                ),
                array (
                    'name' => 'avatarId',
                    'type' => 'String',
                    'info' => 'Avatar identifier.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getAlternativeIssueTypes',
            'description' => 'Returns a list of all alternative issue types for the given issue type identifier.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createIssueTypeAvatar',
            'description' => 'Creates an avatar for an issue type, for a given issue type Id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'image',
                    'type' => 'File',
                    'info' => 'Avatar image.',
                    'required' => true,
                ),
                array (
                    'name' => 'x',
                    'type' => 'Number',
                    'info' => 'The X coordinate of the top-left corner of the crop region. Default: 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'y',
                    'type' => 'Number',
                    'info' => 'The Y coordinate of the top-left corner of the crop region. Default: 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'size',
                    'type' => 'Number',
                    'info' => 'The length of each side of the crop region. The crop region can only be a square.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getIssueTypePropertiesKeys',
            'description' => 'Returns the keys of all properties for the issue type identified by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteIssueTypeProperty',
            'description' => 'Removes the property from the issue type identified by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setIssueTypeProperty',
            'description' => 'Sets the value of the specified issue type\'s property.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Property value.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getIssueTypeProperty',
            'description' => 'Returns the value of the property with a given key from the issue type identified by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'issueTypeId',
                    'type' => 'String',
                    'info' => 'Issue type identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAutoComplete',
            'description' => 'Returns the auto complete data required for JQL searches.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getFieldAutoComplete',
            'description' => 'Returns auto complete suggestions for JQL search.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'fieldName',
                    'type' => 'String',
                    'info' => 'The field name for which the suggestions are generated.',
                    'required' => false,
                ),
                array (
                    'name' => 'fieldValue',
                    'type' => 'String',
                    'info' => 'The portion of the field value that has already been provided by the user.',
                    'required' => false,
                ),
                array (
                    'name' => 'predicateName',
                    'type' => 'String',
                    'info' => 'The predicate for which the suggestions are generated. Suggestions are generated only for: "by", "from" and "to".',
                    'required' => false,
                ),
                array (
                    'name' => 'predicateValue',
                    'type' => 'String',
                    'info' => 'The portion of the predicate value that has already been provided by the user.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMyPreferences',
            'description' => 'Returns preference of the currently logged in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'Key of the preference to be returned.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'setMyPreference',
            'description' => 'Sets preference of the currently logged in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'Key of the preference to be set.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Preference value.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMyPreference',
            'description' => 'Removes preference of the currently logged in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'Key of the preference to be removed.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMe',
            'description' => 'Returns currently logged user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationSchemes',
            'description' => 'Returns a paginated list of notification schemes.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The index of the first notification scheme to return (0 based).',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'The maximum number of notification schemes to return (max 50).',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSingleNotificationScheme',
            'description' => 'Returns a full representation of the notification scheme for the given id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'notificationSchemeId',
                    'type' => 'String',
                    'info' => 'Notification scheme identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getPermissionSchemes',
            'description' => 'Returns a list of all permission schemes.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createPermissionScheme',
            'description' => 'Create a new permission scheme.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Permission scheme name.',
                    'required' => true,
                ),
                array (
                    'name' => 'permissions',
                    'type' => 'Array',
                    'info' => 'Permissions. Example [{"holder": {"type": "group","parameter": "jira-developers"},"permission": "ADMINISTER_PROJECTS"}].',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Permission scheme description.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSinglePermissionScheme',
            'description' => 'Returns a permission scheme identified by the given id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'schemeId',
                    'type' => 'String',
                    'info' => 'Scheme identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deletePermissionScheme',
            'description' => 'Deletes a permission scheme identified by the given id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'schemeId',
                    'type' => 'String',
                    'info' => 'Scheme identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updatePermissionScheme',
            'description' => 'Updates a permission scheme.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'schemeId',
                    'type' => 'String',
                    'info' => 'Permission scheme identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'permissions',
                    'type' => 'Array',
                    'info' => 'Permissions. Example [{"holder": {"type": "group","parameter": "jira-developers"},"permission": "ADMINISTER_PROJECTS"}].',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Permission scheme name.',
                    'required' => false,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Permission scheme description.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getPermissionSchemeGrants',
            'description' => 'Returns all permission grants of the given permission scheme.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'schemeId',
                    'type' => 'String',
                    'info' => 'Scheme identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createPermissionGrant',
            'description' => 'Creates a permission grant in a permission scheme.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'schemeId',
                    'type' => 'String',
                    'info' => 'Scheme identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'holderType',
                    'type' => 'String',
                    'info' => 'Permission type.',
                    'required' => false,
                ),
                array (
                    'name' => 'holderParameter',
                    'type' => 'String',
                    'info' => 'Permission parameter.',
                    'required' => false,
                ),
                array (
                    'name' => 'permission',
                    'type' => 'String',
                    'info' => 'Permission.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deletePermissionSchemeEntity',
            'description' => 'Deletes a permission grant from a permission scheme.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'schemeId',
                    'type' => 'String',
                    'info' => 'Scheme identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'permissionId',
                    'type' => 'String',
                    'info' => 'Permission identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getPermissionSchemeGrant',
            'description' => 'Returns a permission grant identified by the given id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'schemeId',
                    'type' => 'String',
                    'info' => 'Scheme identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'permissionId',
                    'type' => 'String',
                    'info' => 'Permission identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getPriorities',
            'description' => 'Returns a list of all issue priorities.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSinglePriority',
            'description' => 'Returns an issue priority.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'priorityId',
                    'type' => 'String',
                    'info' => 'Priority identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAllProjects',
            'description' => 'Returns all projects which are visible for the currently logged in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
                array (
                    'name' => 'recent',
                    'type' => 'Number',
                    'info' => 'If this parameter is set then only projects recently accessed by the current user.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createProject',
            'description' => 'Creates a new project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'Project key.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Project name.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectTypeKey',
                    'type' => 'String',
                    'info' => 'Project type key.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectTemplateKey',
                    'type' => 'String',
                    'info' => 'Project template key.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Project description.',
                    'required' => false,
                ),
                array (
                    'name' => 'lead',
                    'type' => 'String',
                    'info' => 'Project lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'url',
                    'type' => 'String',
                    'info' => 'Project Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'assigneeType',
                    'type' => 'String',
                    'info' => 'Assignee type. One of "PROJECT_LEAD", "UNASSIGNED".',
                    'required' => false,
                ),
                array (
                    'name' => 'avatarId',
                    'type' => 'Number',
                    'info' => 'Avatar identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueSecurityScheme',
                    'type' => 'Number',
                    'info' => 'Issue security scheme.',
                    'required' => false,
                ),
                array (
                    'name' => 'permissionScheme',
                    'type' => 'Number',
                    'info' => 'Permission scheme.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationScheme',
                    'type' => 'Number',
                    'info' => 'Notification scheme.',
                    'required' => false,
                ),
                array (
                    'name' => 'categoryId',
                    'type' => 'Number',
                    'info' => 'Category identifier.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateProject',
            'description' => 'Updates a project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand in returned project.',
                    'required' => false,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'Project key.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Project name.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectTypeKey',
                    'type' => 'String',
                    'info' => 'Project type key.',
                    'required' => false,
                ),
                array (
                    'name' => 'projectTemplateKey',
                    'type' => 'String',
                    'info' => 'Project template key.',
                    'required' => false,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Project description.',
                    'required' => false,
                ),
                array (
                    'name' => 'lead',
                    'type' => 'String',
                    'info' => 'Project lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'url',
                    'type' => 'String',
                    'info' => 'Project Url.',
                    'required' => false,
                ),
                array (
                    'name' => 'assigneeType',
                    'type' => 'String',
                    'info' => 'Assignee type. One of "PROJECT_LEAD", "UNASSIGNED".',
                    'required' => false,
                ),
                array (
                    'name' => 'avatarId',
                    'type' => 'Number',
                    'info' => 'Avatar identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'issueSecurityScheme',
                    'type' => 'Number',
                    'info' => 'Issue security scheme.',
                    'required' => false,
                ),
                array (
                    'name' => 'permissionScheme',
                    'type' => 'Number',
                    'info' => 'Permission scheme.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationScheme',
                    'type' => 'Number',
                    'info' => 'Notification scheme.',
                    'required' => false,
                ),
                array (
                    'name' => 'categoryId',
                    'type' => 'Number',
                    'info' => 'Category identifier.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteProject',
            'description' => 'Deletes a project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleProject',
            'description' => 'Contains a full representation of a project in JSON format.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateProjectAvatar',
            'description' => 'Update project avatar',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'avatarId',
                    'type' => 'String',
                    'info' => 'Project avatar identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'owner',
                    'type' => 'String',
                    'info' => 'Project avatar owner.',
                    'required' => false,
                ),
                array (
                    'name' => 'isSystemAvatar',
                    'type' => 'String',
                    'info' => 'Is system avatar.',
                    'required' => false,
                ),
                array (
                    'name' => 'isSelected',
                    'type' => 'Boolean',
                    'info' => 'Is selected.',
                    'required' => false,
                ),
                array (
                    'name' => 'isDeletable',
                    'type' => 'Boolean',
                    'info' => 'Is deletable.',
                    'required' => false,
                ),
                array (
                    'name' => 'selected',
                    'type' => 'Boolean',
                    'info' => 'Project avatar selected.',
                    'required' => false,
                ),
                array (
                    'name' => 'urls',
                    'type' => 'JSON',
                    'info' => 'Urls. Example {"16x16": "http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred", "32x32": "http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred"}.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteProjectAvatar',
            'description' => 'Deletes avatar.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'avatarId',
                    'type' => 'String',
                    'info' => 'Avatar identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createProjectAvatar',
            'description' => 'Creates an avatar for a project, for a given project Id or project key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'image',
                    'type' => 'File',
                    'info' => 'Avatar image.',
                    'required' => true,
                ),
                array (
                    'name' => 'x',
                    'type' => 'Number',
                    'info' => 'The X coordinate of the top-left corner of the crop region. Default: 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'y',
                    'type' => 'Number',
                    'info' => 'The Y coordinate of the top-left corner of the crop region. Default: 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'size',
                    'type' => 'Number',
                    'info' => 'The length of each side of the crop region. The crop region can only be a square.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getAllProjectAvatars',
            'description' => 'Returns all avatars which are visible for the currently logged in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getProjectComponents',
            'description' => 'Contains a full representation of a the specified project\'s components.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAllProjectStatuses',
            'description' => 'Get all issue types with valid status values for a project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateProjectType',
            'description' => 'Updates the type of a project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'newProjectTypeKey',
                    'type' => 'String',
                    'info' => 'New project type key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getProjectVersionsPaginated',
            'description' => 'Returns all versions for the specified project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'startAt',
                    'type' => 'Number',
                    'info' => 'The page offset, if not specified then defaults to 0.',
                    'required' => false,
                ),
                array (
                    'name' => 'maxResults',
                    'type' => 'Number',
                    'info' => 'How many results on the page should be included. Defaults to 50.',
                    'required' => false,
                ),
                array (
                    'name' => 'orderBy',
                    'type' => 'String',
                    'info' => 'Ordering of the results.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getProjectPropertiesKeys',
            'description' => 'Returns the keys of all properties for the project identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteProjectProperty',
            'description' => 'Removes the property from the project identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setProjectProperty',
            'description' => 'Sets the value of the specified project\'s property.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Property value.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getProjectProperty',
            'description' => 'Returns the value of the property with a given key from the project identified by the key or by the id.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'propertyKey',
                    'type' => 'String',
                    'info' => 'Property key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleProjectRoles',
            'description' => 'Returns all roles in the given project Id or key, with links to full details on each role.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getProjectSingleRole',
            'description' => 'Returns the details for a given project role in a project together with project role actors.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setRoleActors',
            'description' => 'Updates a project role to include the specified actors (users or groups).',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'Number',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'categorisedActors',
                    'type' => 'JSON',
                    'info' => 'Categorised actors. Example {"atlassian-user-role-actor":["admin"],"atlassian-group-role-actor":["jira-developers"]}.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addActorToProjectRole',
            'description' => 'Adds an actor (user or group) to a project role.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'categorisedActors',
                    'type' => 'String',
                    'info' => 'Categorised actors. Example {"atlassian-user-role-actor":["admin"],"atlassian-group-role-actor":["jira-developers"]}.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteActorFromProjectRole',
            'description' => 'Deletes actors (users or groups) from a project role.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectIdOrKey',
                    'type' => 'String',
                    'info' => 'Project identifier or key.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'user',
                    'type' => 'String',
                    'info' => 'The username to remove from the project role.',
                    'required' => false,
                ),
                array (
                    'name' => 'group',
                    'type' => 'String',
                    'info' => 'The groupname to remove from the project role.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getIssueSecurityScheme',
            'description' => 'Returns the issue security scheme for project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectKeyOrId',
                    'type' => 'String',
                    'info' => 'Project key or identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationScheme',
            'description' => 'Gets a notification scheme associated with the project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectKeyOrId',
                    'type' => 'String',
                    'info' => 'Project key or identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getAssignedPermissionScheme',
            'description' => 'Gets a permission scheme assigned with a project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectKeyOrId',
                    'type' => 'String',
                    'info' => 'Project key or identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'assignPermissionScheme',
            'description' => 'Assigns a permission scheme with a project.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectKeyOrId',
                    'type' => 'String',
                    'info' => 'Project key or identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'permissionSchemeId',
                    'type' => 'Number',
                    'info' => 'Permission scheme identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'expand',
                    'type' => 'String',
                    'info' => 'The parameters to expand.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSecurityLevelsForProject',
            'description' => 'Returns all security levels for the project that the current logged in user has access to.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectKeyOrId',
                    'type' => 'String',
                    'info' => 'Project key or identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAllProjectTypes',
            'description' => 'Returns all the project types defined on the JIRA instance.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getProjectTypeByKey',
            'description' => 'Returns the project type with the given key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectTypeKey',
                    'type' => 'String',
                    'info' => 'Project type key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAccessibleProjectTypeByKey',
            'description' => 'Returns the project type with the given key, if it is accessible to the logged in user.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectTypeKey',
                    'type' => 'String',
                    'info' => 'Project type key.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getAllProjectCategories',
            'description' => 'Returns all project categories.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createProjectCategory',
            'description' => 'Create a project category.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Project category name.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Project category description.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getProjectCategoryById',
            'description' => 'Contains a representation of a project category in JSON format.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectCategoryId',
                    'type' => 'String',
                    'info' => 'Project category identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteProjectCategory',
            'description' => 'Delete a project category.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectCategoryId',
                    'type' => 'String',
                    'info' => 'Project category identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateProjectCategory',
            'description' => 'Modify a project category.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'projectCategoryId',
                    'type' => 'String',
                    'info' => 'Project category identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Project category name.',
                    'required' => false,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Project category description.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'validateProject',
            'description' => 'Validates a project key.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'key',
                    'type' => 'String',
                    'info' => 'The project key.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getResolutions',
            'description' => 'Returns a list of all resolutions.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleResolution',
            'description' => 'Returns a resolution.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'resolutionId',
                    'type' => 'String',
                    'info' => 'Resolution identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getProjectRoles',
            'description' => 'Get all the ProjectRoles available in JIRA. Currently this list is global.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createProjectRole',
            'description' => 'Creates a new ProjectRole to be available in JIRA.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Project role name.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Project role description.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getProjectRolesById',
            'description' => 'Get a specific ProjectRole available in JIRA.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateProjectRole',
            'description' => 'Fully updates a roles.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Project role identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Project role name.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Project role description.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteProjectRole',
            'description' => 'Deletes a role.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'swap',
                    'type' => 'Number',
                    'info' => 'If given, removes a role even if it is used in scheme by replacing the role with the given one.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getDefaultActorsForRole',
            'description' => 'Gets default actors for the given role.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addDefaultActorsToRole',
            'description' => 'Adds default actors to the given role. The request data should contain a list of usernames or a list of groups to add.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'user',
                    'type' => 'String',
                    'info' => 'Comma separated list of users.',
                    'required' => false,
                ),
                array (
                    'name' => 'group',
                    'type' => 'String',
                    'info' => 'Comma separated list of groups.  ',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteDefaultActorFromRole',
            'description' => 'Removes default actor from the given role.',
            'args' => array (
                array (
                    'name' => 'jiraUsername',
                    'type' => 'credentials',
                    'info' => 'Username in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraPassword',
                    'type' => 'credentials',
                    'info' => 'Password in JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'jiraName',
                    'type' => 'String',
                    'info' => 'Name of JIRA.',
                    'required' => true,
                ),
                array (
                    'name' => 'roleId',
                    'type' => 'String',
                    'info' => 'Role identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'user',
                    'type' => 'String',
                    'info' => 'If given, removes an actor from given role.',
                    'required' => false,
                ),
                array (
                    'name' => 'group',
                    'type' => 'String',
                    'info' => 'If given, removes an actor from given role.',
                    'required' => false,
                ),
            ),
        ),
    ),
    'custom' => array (
        'getMyPermissions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectKey' => 'projectKey',
                'projectId' => 'projectId',
                'issueKey' => 'issueKey',
                'issueId' => 'issueId',
            ),
            'query' => array (
                'projectKey',
                'projectId',
                'issueKey',
                'issueId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/mypermissions',
            'method' => 'GET',
        ),
        'getAllPermissions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissions',
            'method' => 'GET',
        ),
        'getProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'key' => 'key',
                'permissionLevel' => 'permissionLevel',
                'keyFilter' => 'keyFilter',
            ),
            'query' => array (
                'key',
                'permissionLevel',
                'keyFilter',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/application-properties',
            'method' => 'GET',
        ),
        'setProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'propertiesId' => 'propertiesId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/application-properties/{{propertiesId}}',
            'method' => 'PUT',
        ),
        'getAdvancedSettings' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/application-properties/advanced-settings',
            'method' => 'GET',
        ),
        'getApplicationRoles' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/applicationrole',
            'method' => 'GET',
        ),
        'getSingleApplicationRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'roleKey' => 'roleKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/applicationrole/{{roleKey}}',
            'method' => 'GET',
        ),
        'getSingleAttachment' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'attachmentId' => 'attachmentId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/attachment/{{attachmentId}}',
            'method' => 'GET',
        ),
        'removeSingleAttachment' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'attachmentId' => 'attachmentId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/attachment/{{attachmentId}}',
            'method' => 'DELETE',
        ),
        'getAuditingRecords' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filter' => 'filter',
                'offset' => 'offset',
                'limit' => 'limit',
                'from' => 'from',
                'to' => 'to',
            ),
            'query' => array (
                'offset',
                'limit',
                'filter',
                'from',
                'to',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/auditing/record',
            'method' => 'GET',
        ),
        'addAuditingRecord' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'remoteAddress' => 'remoteAddress',
                'authorKey' => 'authorKey',
                'eventSource' => 'eventSource',
                'description' => 'description',
                'summary' => 'summary',
                'created' => 'created',
                'category' => 'category',
                'objectItemId' => 'id',
                'objectItemName' => 'name',
                'objectItemTypeName' => 'typeName',
                'objectItemParentId' => 'parentId',
                'objectItemParentName' => 'parentName',
                'changedValues' => 'changedValues',
                'associatedItems' => 'associatedItems',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/auditing/record',
            'method' => 'POST',
            'custom' => true,
        ),
        'getAllSystemAvatars' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'avatarType' => 'avatarType',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/avatar/{{avatarType}}/system',
            'method' => 'GET',
        ),
        'getCommentPropertiesKeys' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'commentId' => 'commentId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/comment/{{commentId}}/properties',
            'method' => 'GET',
        ),
        'deleteCommentProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'commentId' => 'commentId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/comment/{{commentId}}/properties/{{propertyKey}}',
            'method' => 'DELETE',
        ),
        'setCommentProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'commentId' => 'commentId',
                'propertyKey' => 'propertyKey',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/comment/{{commentId}}/properties/{{propertyKey}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'getCommentProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'commentId' => 'commentId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/comment/{{commentId}}/properties/{{propertyKey}}',
            'method' => 'GET',
        ),
        'createComponent' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'description' => 'description',
                'leadUserName' => 'leadUserName',
                'assigneeType' => 'assigneeType',
                'isAssigneeTypeValid' => 'isAssigneeTypeValid',
                'project' => 'project',
                'projectId' => 'projectId',
                'lead' => 'lead',
                'assignee' => 'assignee',
                'realAssigneeType' => 'realAssigneeType',
                'realAssignee' => 'realAssignee',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/component',
            'method' => 'POST',
        ),
        'updateComponent' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'componentId' => 'componentId',
                'name' => 'name',
                'description' => 'description',
                'leadUserName' => 'leadUserName',
                'assigneeType' => 'assigneeType',
                'isAssigneeTypeValid' => 'isAssigneeTypeValid',
                'project' => 'project',
                'projectId' => 'projectId',
                'lead' => 'lead',
                'assignee' => 'assignee',
                'realAssigneeType' => 'realAssigneeType',
                'realAssignee' => 'realAssignee',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/component/{{componentId}}',
            'method' => 'PUT',
        ),
        'getComponent' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'componentId' => 'componentId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/component/{{componentId}}',
            'method' => 'GET',
        ),
        'deleteComponent' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'componentId' => 'componentId',
                'moveIssuesTo' => 'moveIssuesTo',
            ),
            'query' => array (
                'moveIssuesTo',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/component/{{componentId}}',
            'method' => 'DELETE',
        ),
        'getComponentIssuesCounts' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'componentId' => 'componentId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/component/{{componentId}}/relatedIssueCounts',
            'method' => 'GET',
        ),
        'getConfiguration' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/configuration',
            'method' => 'GET',
        ),
        'getSelectedTimeTracking' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/configuration/timetracking',
            'method' => 'GET',
        ),
        'selectTimeTracking' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'key' => 'key',
                'name' => 'name',
                'url' => 'url',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/configuration/timetracking',
            'method' => 'PUT',
        ),
        'disableTimeTracking' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/configuration/timetracking',
            'method' => 'DELETE',
        ),
        'getTimeTrackingList' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/configuration/timetracking/list',
            'method' => 'GET',
        ),
        'getTimeTrackingConfiguration' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/configuration/timetracking/options',
            'method' => 'GET',
        ),
        'setTimeTrackingConfiguration' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'workingHoursPerDay' => 'workingHoursPerDay',
                'workingDaysPerWeek' => 'workingDaysPerWeek',
                'timeFormat' => 'timeFormat',
                'defaultUnit' => 'defaultUnit',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/configuration/timetracking/options',
            'method' => 'PUT',
        ),
        'getSingleCustomFieldOption' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'optionId' => 'optionId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/customFieldOption/{{optionId}}',
            'method' => 'GET',
        ),
        'getDashboards' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filter' => 'filter',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
            ),
            'query' => array (
                'filter',
                'startAt',
                'maxResults',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/dashboard',
            'method' => 'GET',
        ),
        'getSingleDashboard' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'dashboardId' => 'dashboardId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/dashboard/{{dashboardId}}',
            'method' => 'GET',
        ),
        'getDashboardPropertiesKeys' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'dashboardId' => 'dashboardId',
                'itemId' => 'itemId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/dashboard/{{dashboardId}}/items/{{itemId}}/properties',
            'method' => 'GET',
        ),
        'deleteDashboardProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'dashboardId' => 'dashboardId',
                'itemId' => 'itemId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/dashboard/{{dashboardId}}/items/{{itemId}}/properties/{{propertyKey}}',
            'method' => 'DELETE',
        ),
        'setDashboardProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'dashboardId' => 'dashboardId',
                'itemId' => 'itemId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/dashboard/{{dashboardId}}/items/{{itemId}}/properties/{{propertyKey}}',
            'method' => 'PUT',
        ),
        'getDashboardProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'dashboardId' => 'dashboardId',
                'itemId' => 'itemId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/dashboard/{{dashboardId}}/items/{{itemId}}/properties/{{propertyKey}}',
            'method' => 'GET',
        ),
        'createCustomField' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'description' => 'description',
                'type' => 'type',
                'searcherKey' => 'searcherKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field',
            'method' => 'POST',
        ),
        'getFields' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field',
            'method' => 'GET',
        ),
        'createSelectFieldOption' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldKey' => 'fieldKey',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field/{{fieldKey}}/option',
            'method' => 'POST',
        ),
        'getSelectFieldOptions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldKey' => 'fieldKey',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
            ),
            'query' => array (
                'startAt',
                'maxResults',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field/{{fieldKey}}/option',
            'method' => 'GET',
        ),
        'updateSelectFieldOptions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldKey' => 'fieldKey',
                'optionId' => 'optionId',
                'id' => 'id',
                'value' => 'value',
                'propertiesLeaderName' => 'name',
                'propertiesLeaderEmail' => 'email',
                'propertiesMembers' => 'members',
                'propertiesDescription' => 'description',
                'configScopeProjects' => 'projects',
                'configAttributes' => 'attributes',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field/{{fieldKey}}/option/{{optionId}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'getSelectFieldSingleOption' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldKey' => 'fieldKey',
                'optionId' => 'optionId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field/{{fieldKey}}/option/{{optionId}}',
            'method' => 'GET',
        ),
        'deleteSelectFieldSingleOption' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldKey' => 'fieldKey',
                'optionId' => 'optionId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field/{{fieldKey}}/option/{{optionId}}',
            'method' => 'DELETE',
        ),
        'getAvailableSelectFieldOptions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldKey' => 'fieldKey',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
                'projectId' => 'projectId',
            ),
            'query' => array (
                'startAt',
                'maxResults',
                'projectId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field/{{fieldKey}}/option/suggestions/edit',
            'method' => 'GET',
        ),
        'searchSelectFieldOptions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldKey' => 'fieldKey',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
                'projectId' => 'projectId',
            ),
            'query' => array (
                'startAt',
                'maxResults',
                'projectId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/field/{{fieldKey}}/option/suggestions/search',
            'method' => 'GET',
        ),
        'createFilter' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'description' => 'description',
                'jql' => 'jql',
                'expand' => 'expand',
                'favourite' => 'favourite',
                'owner' => 'owner',
                'viewUrl' => 'viewUrl',
                'searchUrl' => 'searchUrl',
                'sharePermissions' => 'sharePermissions',
                'sharedUsers' => 'sharedUsers',
                'subscriptions' => 'subscriptions',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter',
            'method' => 'POST',
        ),
        'updateFilter' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
                'name' => 'name',
                'description' => 'description',
                'jql' => 'jql',
                'expand' => 'expand',
                'favourite' => 'favourite',
                'owner' => 'owner',
                'viewUrl' => 'viewUrl',
                'searchUrl' => 'searchUrl',
                'sharePermissions' => 'sharePermissions',
                'sharedUsers' => 'sharedUsers',
                'subscriptions' => 'subscriptions',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}',
            'method' => 'PUT',
        ),
        'deleteFilter' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}',
            'method' => 'DELETE',
        ),
        'getFilter' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}',
            'method' => 'GET',
        ),
        'getFilterDefaultColumns' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}/columns',
            'method' => 'GET',
        ),
        'setFilterDefaultColumns' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}/columns',
            'method' => 'PUT',
        ),
        'resetFilterDefaultColumns' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}/columns',
            'method' => 'DELETE',
        ),
        'getFilterSharePermissions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}/permission',
            'method' => 'GET',
        ),
        'addFilterSharePermissions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
                'type' => 'type',
                'groupname' => 'groupname',
                'projectId' => 'projectId',
                'projectRoleId' => 'projectRoleId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}/permission',
            'method' => 'POST',
        ),
        'getFilterSingleSharePermission' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
                'permissionId' => 'permissionId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}/permission/{{permissionId}}',
            'method' => 'GET',
        ),
        'deleteFilterSingleSharePermission' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'filterId' => 'filterId',
                'permissionId' => 'permissionId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/{{filterId}}/permission/{{permissionId}}',
            'method' => 'DELETE',
        ),
        'getDefaultShareScope' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/defaultShareScope',
            'method' => 'GET',
        ),
        'setDefaultShareScope' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'scope' => 'scope',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/defaultShareScope',
            'method' => 'PUT',
        ),
        'getFavouriteFilters' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/favourite',
            'method' => 'GET',
        ),
        'getMyFilters' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'expand' => 'expand',
                'includeFavourites' => 'includeFavourites',
            ),
            'query' => array (
                'expand',
                'includeFavourites',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/filter/my',
            'method' => 'GET',
        ),
        'createGroup' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/group',
            'method' => 'POST',
        ),
        'deleteGroup' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'groupname' => 'groupname',
                'swapGroup' => 'swapGroup',
            ),
            'query' => array (
                'groupname',
                'swapGroup',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/group',
            'method' => 'DELETE',
        ),
        'getUsersFromGroup' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'groupname' => 'groupname',
                'includeInactiveUsers' => 'includeInactiveUsers',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
            ),
            'query' => array (
                'groupname',
                'includeInactiveUsers',
                'startAt',
                'maxResults',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/group/member',
            'method' => 'GET',
        ),
        'addUserToGroup' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'groupname' => 'groupname',
                'name' => 'name',
            ),
            'query' => array (
                'groupname',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/group/user',
            'method' => 'POST',
        ),
        'deleteUserFromGroup' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'groupname' => 'groupname',
                'username' => 'username',
            ),
            'query' => array (
                'groupname',
                'username',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/group/user',
            'method' => 'DELETE',
        ),
        'findGroups' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'query' => 'query',
                'exclude' => 'exclude',
                'maxResults' => 'maxResults',
                'userName' => 'userName',
            ),
            'query' => array (
                'query',
                'exclude',
                'maxResults',
                'userName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/groups/picker',
            'method' => 'GET',
        ),
        'findUsersAndGroups' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'query' => 'query',
                'maxResults' => 'maxResults',
                'showAvatar' => 'showAvatar',
                'fieldId' => 'fieldId',
                'projectId' => 'projectId',
                'issueTypeId' => 'issueTypeId',
            ),
            'query' => array (
                'query',
                'maxResults',
                'showAvatar',
                'fieldId',
                'projectId',
                'issueTypeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/groupuserpicker',
            'method' => 'GET',
        ),
        'createSingleIssue' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'update' => 'update',
                'fields' => 'fields',
                'transition' => 'transition',
                'historyMetadata' => 'historyMetadata',
                'properties' => 'properties',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue',
            'method' => 'POST',
        ),
        'createIssues' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueUpdates' => 'issueUpdates',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/bulk',
            'method' => 'POST',
        ),
        'getSingleIssue' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'fields' => 'fields',
                'expand' => 'expand',
                'properties' => 'properties',
                'fieldsByKeys' => 'fieldsByKeys',
                'updateHistory' => 'updateHistory',
            ),
            'query' => array (
                'fields',
                'expand',
                'properties',
                'fieldsByKeys',
                'updateHistory',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}',
            'method' => 'GET',
        ),
        'deleteSingleIssue' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
            ),
            'query' => array (
                'deleteSubtasks',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}',
            'method' => 'DELETE',
        ),
        'updateSingleIssue' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'notifyUsers' => 'notifyUsers',
                'overrideScreenSecurity' => 'overrideScreenSecurity',
                'overrideEditableFlag' => 'overrideEditableFlag',
                'transition' => 'transition',
                'fields' => 'fields',
                'update' => 'update',
                'historyMetadata' => 'historyMetadata',
                'properties' => 'properties',
            ),
            'query' => array (
                'notifyUsers',
                'overrideScreenSecurity',
                'overrideEditableFlag',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}',
            'method' => 'PUT',
        ),
        'assignIssueToUser' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'name' => 'name',
                'key' => 'key',
                'accountId' => 'accountId',
                'emailAddress' => 'emailAddress',
                'avatarUrls' => 'avatarUrls',
                'displayName' => 'displayName',
                'active' => 'active',
                'timeZone' => 'timeZone',
                'locale' => 'locale',
                'groups' => 'groups',
                'applicationRoles' => 'applicationRoles',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/assignee',
            'method' => 'PUT',
        ),
        'getIssueComments' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
                'orderBy' => 'orderBy',
                'expand' => 'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/comment',
            'method' => 'GET',
            'custom' => true,
        ),
        'addCommentToIssue' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'body' => 'body',
                'visibilityType' => 'type',
                'visibilityValue' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/comment',
            'method' => 'POST',
            'custom' => true,
        ),
        'updateIssueComment' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'commentId' => 'commentId',
                'expand' => 'expand',
                'body' => 'body',
                'visibilityType' => 'visibilityType',
                'visibilityValue' => 'visibilityValue',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/comment/{{commentId}}',
            'method' => 'PUT',
        ),
        'deleteIssueComment' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'commentId' => 'commentId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/comment/{{commentId}}',
            'method' => 'DELETE',
        ),
        'getIssueSingleComment' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'commentId' => 'commentId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/comment/{{commentId}}',
            'method' => 'GET',
        ),
        'sendIssueNotify' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'subject' => 'subject',
                'textBody' => 'textBody',
                'htmlBody' => 'htmlBody',
                'showToReporter' => 'showToReporter',
                'showToAssignee' => 'showToAssignee',
                'showToWatchers' => 'showToWatchers',
                'showToVoters' => 'showToVoters',
                'showToUsers' => 'showToUsers',
                'showToGroups' => 'showToGroups',
                'restrictGroups' => 'restrictGroups',
                'restrictPermissions' => 'restrictPermissions',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/notify',
            'method' => 'POST',
            'custom' => true,
        ),
        'getRemoteIssueLinks' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'globalId' => 'globalId',
            ),
            'query' => array (
                'globalId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/remotelink',
            'method' => 'GET',
        ),
        'createRemoteIssueLink' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'applicationType' => 'applicationType',
                'applicationName' => 'applicationName',
                'relationship' => 'relationship',
                'issueLinkUrl' => 'issueLinkUrl',
                'issueLinkTitle' => 'issueLinkTitle',
                'issueLinkSummary' => 'issueLinkSummary',
                'issueLinkIconUrl' => 'issueLinkIconUrl',
                'issueLinkIconTitle' => 'issueLinkIconTitle',
                'issueLinkStatusResolved' => 'issueLinkStatusResolved',
                'issueLinkStatusIconUrl' => 'issueLinkStatusIconUrl',
                'issueLinkStatusIconTitle' => 'issueLinkStatusIconTitle',
                'issueLinkStatusIconLink' => 'issueLinkStatusIconLink',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/remotelink',
            'method' => 'POST',
            'custom' => true,
        ),
        'deleteRemoteIssueLinkByGlobalId' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'globalId' => 'globalId',
            ),
            'query' => array (
                'globalId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/remotelink',
            'method' => 'DELETE',
        ),
        'getRemoteIssueLinkById' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'linkId' => 'linkId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/remotelink/{{linkId}}',
            'method' => 'GET',
        ),
        'updateRemoteIssueLink' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'linkId' => 'linkId',
                'globalId' => 'globalId',
                'applicationType' => 'applicationType',
                'applicationName' => 'applicationName',
                'relationship' => 'relationship',
                'issueLinkUrl' => 'issueLinkUrl',
                'issueLinkTitle' => 'issueLinkTitle',
                'issueLinkSummary' => 'issueLinkSummary',
                'issueLinkIconUrl' => 'issueLinkIconUrl',
                'issueLinkIconTitle' => 'issueLinkIconTitle',
                'issueLinkStatusResolved' => 'issueLinkStatusResolved',
                'issueLinkStatusIconUrl' => 'issueLinkStatusIconUrl',
                'issueLinkStatusIconTitle' => 'issueLinkStatusIconTitle',
                'issueLinkStatusIconLink' => 'issueLinkStatusIconLink',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/remotelink/{{linkId}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'deleteRemoteIssueLinkById' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'linkId' => 'linkId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/remotelink/{{linkId}}',
            'method' => 'DELETE',
        ),
        'getIssueTransitions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'transitionId' => 'transitionId',
                'skipRemoteOnlyCondition' => 'skipRemoteOnlyCondition',
            ),
            'query' => array (
                'transitionId',
                'skipRemoteOnlyCondition',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/transitions',
            'method' => 'GET',
        ),
        'makeIssueTransition' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'transition' => 'transition',
                'update' => 'update',
                'fields' => 'fields',
                'historyMetadata' => 'historyMetadata',
                'properties' => 'properties',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/transitions',
            'method' => 'POST',
        ),
        'deleteIssueVote' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/votes',
            'method' => 'DELETE',
        ),
        'addIssueVote' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/votes',
            'method' => 'POST',
        ),
        'getIssueVotes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/votes',
            'method' => 'GET',
        ),
        'getIssueWatchers' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/watchers',
            'method' => 'GET',
        ),
        'addIssueWatcher' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'username' => 'username',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/watchers',
            'method' => 'POST',
        ),
        'deleteIssueWatcher' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'username' => 'username',
            ),
            'query' => array (
                'username',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/watchers',
            'method' => 'DELETE',
        ),
        'getIssueWorklog' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog',
            'method' => 'GET',
        ),
        'getWorklogById' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'worklogId' => 'worklogId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog/{{worklogId}}',
            'method' => 'GET',
        ),
        'addIssueWorklog' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'adjustEstimate' => 'adjustEstimate',
                'newEstimate' => 'newEstimate',
                'reduceBy' => 'reduceBy',
                'expand' => 'expand',
                'comment' => 'comment',
                'visibilityType' => 'visibilityType',
                'visibilityValue' => 'visibilityValue',
                'started' => 'started',
                'timeSpentSeconds' => 'timeSpentSeconds',
            ),
            'query' => array (
                'adjustEstimate',
                'newEstimate',
                'reduceBy',
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog',
            'method' => 'POST',
            'custom' => true,
        ),
        'updateIssueWorklog' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'worklogId' => 'worklogId',
                'adjustEstimate' => 'adjustEstimate',
                'newEstimate' => 'newEstimate',
                'reduceBy' => 'reduceBy',
                'expand' => 'expand',
                'comment' => 'comment',
                'visibilityType' => 'visibilityType',
                'visibilityValue' => 'visibilityValue',
                'started' => 'started',
                'timeSpentSeconds' => 'timeSpentSeconds',
            ),
            'query' => array (
                'adjustEstimate',
                'newEstimate',
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog/{{worklogId}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'deleteIssueWorklog' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'worklogId' => 'worklogId',
                'adjustEstimate' => 'adjustEstimate',
                'newEstimate' => 'newEstimate',
                'increaseBy' => 'increaseBy',
            ),
            'query' => array (
                'adjustEstimate',
                'newEstimate',
                'increaseBy',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog/{{worklogId}}',
            'method' => 'DELETE',
        ),
        'getCreatedIssueMeta' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIds' => 'projectIds',
                'projectKeys' => 'projectKeys',
                'issuetypeIds' => 'issuetypeIds',
                'issuetypeNames' => 'issuetypeNames',
            ),
            'query' => array (
                'projectIds',
                'projectKeys',
                'issuetypeIds',
                'issuetypeNames',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/createmeta',
            'method' => 'GET',
        ),
        'getIssuesBasedOnQuery' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'query' => 'query',
                'currentJQL' => 'currentJQL',
                'currentIssueKey' => 'currentIssueKey',
                'currentProjectId' => 'currentProjectId',
                'showSubTasks' => 'showSubTasks',
                'showSubTaskParent' => 'showSubTaskParent',
            ),
            'query' => array (
                'query',
                'currentJQL',
                'currentIssueKey',
                'currentProjectId',
                'showSubTasks',
                'showSubTaskParent',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/picker',
            'method' => 'GET',
        ),
        'addIssueAttachment' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'Attachment' => 'file',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/attachments',
            'method' => 'POST-FILE',
        ),
/* Part 2 */
        'getIssuePropertiesKeys' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/properties',
            'method' => 'GET',
        ),
        'deleteIssueProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/properties/{{propertyKey}}',
            'method' => 'DELETE',
        ),
        'setIssueProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'propertyKey' => 'propertyKey',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/properties/{{propertyKey}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'getIssueProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/properties/{{propertyKey}}',
            'method' => 'GET',
        ),
        'getWorklogPropertiesKeys' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'worklogId' => 'worklogId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog/{{worklogId}}/properties',
            'method' => 'GET',
        ),
        'deleteWorklogProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'worklogId' => 'worklogId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog/{{worklogId}}/properties/{{propertyKey}}',
            'method' => 'DELETE',
        ),
        'setWorklogProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'worklogId' => 'worklogId',
                'propertyKey' => 'propertyKey',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog/{{worklogId}}/properties/{{propertyKey}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'getWorklogProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueIdOrKey' => 'issueIdOrKey',
                'worklogId' => 'worklogId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issue/{{issueIdOrKey}}/worklog/{{worklogId}}/properties/{{propertyKey}}',
            'method' => 'GET',
        ),
        'createIssueLink' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'typeName' => 'typeName',
                'typeId' => 'typeId',
                'typeInward' => 'typeInward',
                'typeOutward' => 'typeOutward',
                'inwardIssue' => 'inwardIssue',
                'outwardIssue' => 'outwardIssue',
                'commentAuthor' => 'commentAuthor',
                'commentBody' => 'commentBody',
                'commentRenderedBody' => 'commentRenderedBody',
                'commentVisibilityType' => 'commentVisibilityType',
                'commentVisibilityValue' => 'commentVisibilityValue',
                'commentProperties' => 'commentProperties',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLink',
            'method' => 'POST',
            'custom' => true,
        ),
        'getIssueLink' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'linkId' => 'linkId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLink/{{linkId}}',
            'method' => 'GET',
        ),
        'deleteIssueLink' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'linkId' => 'linkId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLink/{{linkId}}',
            'method' => 'DELETE',
        ),
        'getIssueLinkTypes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLinkType',
            'method' => 'GET',
        ),
        'createIssueLinkType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'inward' => 'inward',
                'outward' => 'outward',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLinkType',
            'method' => 'POST',
        ),
        'getSingleIssueLinkType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueLinkTypeId' => 'issueLinkTypeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLinkType/{{issueLinkTypeId}}',
            'method' => 'GET',
        ),
        'deleteSingleIssueLinkType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueLinkTypeId' => 'issueLinkTypeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLinkType/{{issueLinkTypeId}}',
            'method' => 'DELETE',
        ),
        'updateSingleIssueLinkType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueLinkTypeId' => 'issueLinkTypeId',
                'name' => 'name',
                'inward' => 'inward',
                'outward' => 'outward',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issueLinkType/{{issueLinkTypeId}}',
            'method' => 'PUT',
        ),
        'getIssueSecuritySchemes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuesecurityschemes',
            'method' => 'GET',
        ),
        'getIssueSingleSecurityScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueSecuritySchemesId' => 'issueSecuritySchemesId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuesecurityschemes/{{issueSecuritySchemesId}}',
            'method' => 'GET',
        ),
        'getIssueAllTypes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype',
            'method' => 'GET',
        ),
        'createIssueType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'description' => 'description',
                'type' => 'type',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype',
            'method' => 'POST',
        ),
        'getSingleIssueType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}',
            'method' => 'GET',
        ),
        'deleteSingleIssueType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
                'alternativeIssueTypeId' => 'alternativeIssueTypeId',
            ),
            'query' => array (
                'alternativeIssueTypeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}',
            'method' => 'DELETE',
        ),
        'updateSingleIssueType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
                'name' => 'name',
                'description' => 'description',
                'avatarId' => 'avatarId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}',
            'method' => 'PUT',
        ),
        'getAlternativeIssueTypes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}/alternatives',
            'method' => 'GET',
        ),
        'createIssueTypeAvatar' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
                'image' => 'file',
                'x' => 'x',
                'y' => 'y',
                'size' => 'size',
            ),
            'query' => array (
                'x',
                'y',
                'size',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}/avatar2',
            'method' => 'POST-FILE',
        ),
        'getIssueTypePropertiesKeys' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}/properties',
            'method' => 'GET',
        ),
        'deleteIssueTypeProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}/properties/{{propertyKey}}',
            'method' => 'DELETE',
        ),
        'setIssueTypeProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
                'propertyKey' => 'propertyKey',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}/properties/{{propertyKey}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'getIssueTypeProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'issueTypeId' => 'issueTypeId',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/issuetype/{{issueTypeId}}/properties/{{propertyKey}}',
            'method' => 'GET',
        ),
        'getAutoComplete' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/jql/autocompletedata',
            'method' => 'GET',
        ),
        'getFieldAutoComplete' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'fieldName' => 'fieldName',
                'fieldValue' => 'fieldValue',
                'predicateName' => 'predicateName',
                'predicateValue' => 'predicateValue',
            ),
            'query' => array (
                'fieldName',
                'fieldValue',
                'predicateName',
                'predicateValue',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/jql/autocompletedata/suggestions',
            'method' => 'GET',
        ),
        'getMyPreferences' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'key' => 'key',
            ),
            'query' => array (
                'key',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/mypreferences',
            'method' => 'GET',
        ),
        'setMyPreference' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'key' => 'key',
                'value' => 'value',
            ),
            'query' => array (
                'key',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/mypreferences',
            'method' => 'PUT',
            'custom' => true,
        ),
        'deleteMyPreference' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'key' => 'key',
            ),
            'query' => array (
                'key',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/mypreferences',
            'method' => 'DELETE',
        ),
        'getMe' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/myself',
            'method' => 'GET',
        ),
        'getNotificationSchemes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
                'expand' => 'expand',
            ),
            'query' => array (
                'startAt',
                'maxResults',
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/notificationscheme',
            'method' => 'GET',
        ),
        'getSingleNotificationScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'notificationSchemeId' => 'notificationSchemeId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/notificationscheme/{{notificationSchemeId}}',
            'method' => 'GET',
        ),
        'getPermissionSchemes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme',
            'method' => 'GET',
        ),
        'createPermissionScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'permissions' => 'permissions',
                'description' => 'description',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme',
            'method' => 'POST',
        ),
        'getSinglePermissionScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'schemeId' => 'schemeId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme/{{schemeId}}',
            'method' => 'GET',
        ),
        'deletePermissionScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'schemeId' => 'schemeId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme/{{schemeId}}',
            'method' => 'DELETE',
        ),
        'updatePermissionScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'schemeId' => 'schemeId',
                'permissions' => 'permissions',
                'name' => 'name',
                'description' => 'description',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme/{{schemeId}}',
            'method' => 'PUT',
        ),
        'getPermissionSchemeGrants' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'schemeId' => 'schemeId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme/{{schemeId}}/permission',
            'method' => 'GET',
        ),
        'createPermissionGrant' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'schemeId' => 'schemeId',
                'holderType' => 'holderType',
                'holderParameter' => 'holderParameter',
                'permission' => 'permission',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme/{{schemeId}}/permission',
            'method' => 'POST',
        ),
        'deletePermissionSchemeEntity' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'schemeId' => 'schemeId',
                'permissionId' => 'permissionId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme/{{schemeId}}/permission/{{permissionId}}',
            'method' => 'DELETE',
        ),
        'getPermissionSchemeGrant' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'schemeId' => 'schemeId',
                'permissionId' => 'permissionId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/permissionscheme/{{schemeId}}/permission/{{permissionId}}',
            'method' => 'GET',
        ),
        'getPriorities' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/priority',
            'method' => 'GET',
        ),
        'getSinglePriority' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'priorityId' => 'priorityId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/priority/{{priorityId}}',
            'method' => 'GET',
        ),
        'getAllProjects' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'expand' => 'expand',
                'recent' => 'recent',
            ),
            'query' => array (
                'expand',
                'recent',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project',
            'method' => 'GET',
        ),
        'createProject' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'key' => 'key',
                'name' => 'name',
                'projectTypeKey' => 'projectTypeKey',
                'projectTemplateKey' => 'projectTemplateKey',
                'description' => 'description',
                'lead' => 'lead',
                'url' => 'url',
                'assigneeType' => 'assigneeType',
                'avatarId' => 'avatarId',
                'issueSecurityScheme' => 'issueSecurityScheme',
                'permissionScheme' => 'permissionScheme',
                'notificationScheme' => 'notificationScheme',
                'categoryId' => 'categoryId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project',
            'method' => 'POST',
        ),
        'updateProject' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'expand' => 'expand',
                'key' => 'key',
                'name' => 'name',
                'projectTypeKey' => 'projectTypeKey',
                'projectTemplateKey' => 'projectTemplateKey',
                'description' => 'description',
                'lead' => 'lead',
                'url' => 'url',
                'assigneeType' => 'assigneeType',
                'avatarId' => 'avatarId',
                'issueSecurityScheme' => 'issueSecurityScheme',
                'permissionScheme' => 'permissionScheme',
                'notificationScheme' => 'notificationScheme',
                'categoryId' => 'categoryId',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}',
            'method' => 'PUT',
        ),
        'deleteProject' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}',
            'method' => 'DELETE',
        ),
        'getSingleProject' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}',
            'method' => 'GET',
        ),
        'updateProjectAvatar' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'avatarId' => 'id',
                'owner' => 'owner',
                'isSystemAvatar' => 'isSystemAvatar',
                'isSelected' => 'isSelected',
                'isDeletable' => 'isDeletable',
                'selected' => 'selected',
                'urls' => 'urls',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/avatar',
            'method' => 'PUT',
        ),
        'deleteProjectAvatar' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'avatarId' => 'avatarId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/avatar/{{avatarId}}',
            'method' => 'DELETE',
        ),
        'createProjectAvatar' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'image' => 'file',
                'x' => 'x',
                'y' => 'y',
                'size' => 'size',
            ),
            'query' => array (
                'x',
                'y',
                'size',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/avatar2',
            'method' => 'POST-FILE',
        ),
        'getAllProjectAvatars' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/avatars',
            'method' => 'GET',
        ),
        'getProjectComponents' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/components',
            'method' => 'GET',
        ),
        'getAllProjectStatuses' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/statuses',
            'method' => 'GET',
        ),
        'updateProjectType' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'newProjectTypeKey' => 'newProjectTypeKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/type/{{newProjectTypeKey}}',
            'method' => 'PUT',
        ),
        'getProjectVersionsPaginated' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'startAt' => 'startAt',
                'maxResults' => 'maxResults',
                'orderBy' => 'orderBy',
                'expand' => 'expand',
            ),
            'query' => array (
                'startAt',
                'maxResults',
                'orderBy',
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/version',
            'method' => 'GET',
        ),
        'getProjectPropertiesKeys' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/properties',
            'method' => 'GET',
        ),
        'deleteProjectProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/properties/{{propertyKey}}',
            'method' => 'DELETE',
        ),
        'setProjectProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'propertyKey' => 'propertyKey',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/properties/{{propertyKey}}',
            'method' => 'PUT',
            'custom' => true,
        ),
        'getProjectProperty' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'propertyKey' => 'propertyKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/properties/{{propertyKey}}',
            'method' => 'GET',
        ),
        'getSingleProjectRoles' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/role',
            'method' => 'GET',
        ),
        'getProjectSingleRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'roleId' => 'roleId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/role/{{roleId}}',
            'method' => 'GET',
        ),
        'setRoleActors' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'roleId' => 'roleId',
                'categorisedActors' => 'categorisedActors',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/role/{{roleId}}',
            'method' => 'PUT',
        ),
        'addActorToProjectRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'roleId' => 'roleId',
                'categorisedActors' => 'categorisedActors',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/role/{{roleId}}',
            'method' => 'POST',
        ),
        'deleteActorFromProjectRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectIdOrKey' => 'projectIdOrKey',
                'roleId' => 'roleId',
                'user' => 'user',
                'group' => 'group',
            ),
            'query' => array (
                'user',
                'group',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectIdOrKey}}/role/{{roleId}}',
            'method' => 'DELETE',
        ),
        'getIssueSecurityScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectKeyOrId' => 'projectKeyOrId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectKeyOrId}}/issuesecuritylevelscheme',
            'method' => 'GET',
        ),
        'getNotificationScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectKeyOrId' => 'projectKeyOrId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectKeyOrId}}/notificationscheme',
            'method' => 'GET',
        ),
        'getAssignedPermissionScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectKeyOrId' => 'projectKeyOrId',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectKeyOrId}}/permissionscheme',
            'method' => 'GET',
        ),
        'assignPermissionScheme' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectKeyOrId' => 'projectKeyOrId',
                'permissionSchemeId' => 'id',
                'expand' => 'expand',
            ),
            'query' => array (
                'expand',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectKeyOrId}}/permissionscheme',
            'method' => 'PUT',
        ),
        'getSecurityLevelsForProject' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectKeyOrId' => 'projectKeyOrId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/{{projectKeyOrId}}/securitylevel',
            'method' => 'GET',
        ),
        'getAllProjectTypes' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/type',
            'method' => 'GET',
        ),
        'getProjectTypeByKey' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectTypeKey' => 'projectTypeKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/type/{{projectTypeKey}}',
            'method' => 'GET',
        ),
        'getAccessibleProjectTypeByKey' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectTypeKey' => 'projectTypeKey',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/project/type/{{projectTypeKey}}/accessible',
            'method' => 'GET',
        ),
        'getAllProjectCategories' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/projectCategory',
            'method' => 'GET',
        ),
        'createProjectCategory' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/projectCategory',
            'method' => 'POST',
        ),
        'getProjectCategoryById' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectCategoryId' => 'projectCategoryId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/projectCategory/{{projectCategoryId}}',
            'method' => 'GET',
        ),
        'deleteProjectCategory' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectCategoryId' => 'projectCategoryId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/projectCategory/{{projectCategoryId}}',
            'method' => 'DELETE',
        ),
        'updateProjectCategory' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'projectCategoryId' => 'projectCategoryId',
                'name' => 'name',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/projectCategory/{{projectCategoryId}}',
            'method' => 'PUT',
        ),
        'validateProject' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'key' => 'key',
            ),
            'query' => array (
                'key',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/projectvalidate/key',
            'method' => 'GET',
        ),
        'getResolutions' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/resolution',
            'method' => 'GET',
        ),
        'getSingleResolution' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'resolutionId' => 'resolutionId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/resolution/{{resolutionId}}',
            'method' => 'GET',
        ),
        'getProjectRoles' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role',
            'method' => 'GET',
        ),
        'createProjectRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'name' => 'name',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role',
            'method' => 'POST',
        ),
        'getProjectRolesById' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'roleId' => 'roleId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role/{{roleId}}',
            'method' => 'GET',
        ),
        'updateProjectRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'roleId' => 'roleId',
                'name' => 'name',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role/{{roleId}}',
            'method' => 'PUT',
        ),
        'deleteProjectRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'roleId' => 'roleId',
                'swap' => 'swap',
            ),
            'query' => array (
                'swap',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role/{{roleId}}',
            'method' => 'DELETE',
        ),
        'getDefaultActorsForRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'roleId' => 'roleId',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role/{{roleId}}/actors',
            'method' => 'GET',
        ),
        'addDefaultActorsToRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'roleId' => 'roleId',
                'user' => 'user',
                'group' => 'group',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role/{{roleId}}/actors',
            'method' => 'POST',
            'custom' => true,
        ),
        'deleteDefaultActorFromRole' => array (
            'dictionary' => array (
                'jiraUsername' => 'jiraUsername',
                'jiraPassword' => 'jiraPassword',
                'jiraName' => 'jiraName',
                'roleId' => 'roleId',
                'user' => 'user',
                'group' => 'group',
            ),
            'query' => array (
                'user',
                'group',
            ),
            'vendorUrl' => 'https://{{jiraName}}.atlassian.net/rest/api/2/role/{{roleId}}/actors',
            'method' => 'DELETE',
        ),
    ),
);